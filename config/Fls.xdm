<?xml version='1.0'?>
<datamodel version="3.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/08/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/08/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">
<!--
*   @file    Fls.xdm
*   @version 1.0.2
*
*   @brief   AUTOSAR Fls - Tresos Studio plugin schema file
*   @details This file contains the schema configuration for and Fls Tresos Studio plugin.
-->
<!--
====================================================================================================
*   Project              : AUTOSAR 4.3 MCAL
*   Platform             : ARM
*   Peripheral           : IPV_FTFE
*   Dependencies         : 
*
*   Autosar Version      : 4.3.1
*   Autosar Revision     : ASR_REL_4_3_REV_0001
*   Autosar Conf.Variant :
*   SW Version           : 1.0.2
*   Build Version        : S32K1XX_MCAL_1_0_2_RTM_ASR_REL_4_3_REV_0001_23-Apr-21

*   (c) Copyright 2006-2016 Freescale Semiconductor, Inc. 
*       Copyright 2017-2021 NXP
*   All Rights Reserved.
====================================================================================================
====================================================================================================
====================================================================================================
-->


<d:ctr type="AUTOSAR" factory="autosar"  
    xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
    xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
    xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd" >
    <d:lst type="TOP-LEVEL-PACKAGES">
        <d:ctr name="TS_T40D2M10I2R0" type="AR-PACKAGE">
            <a:a name="UUID" value="ECUC:13b01487-a247-46d3-a33d-b0e8314620b6"/>
            <d:lst type="ELEMENTS">
                <!-- @implements Fls_Object -->
                <d:chc name="Fls" type="AR-ELEMENT" value="MODULE-DEF">             
                    <v:ctr type="MODULE-DEF">
                        <a:a name="RELEASE" value="asc:4.3"/>
                        <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                            <ad:ADMIN-DATA>
                                <ad:DOC-REVISIONS>
                                    <ad:DOC-REVISION>                    
                                        <ad:REVISION-LABEL>4.6.0</ad:REVISION-LABEL>
                                        <ad:ISSUED-BY>NXP</ad:ISSUED-BY>
                                        <ad:DATE>2014-10-31</ad:DATE>                      
                                    </ad:DOC-REVISION>
                                </ad:DOC-REVISIONS>
                            </ad:ADMIN-DATA>
                            <a:a name="POSTBUILDVARIANTSUPPORT" value="true"/>
                        </a:a>
                        <a:a name="DESC">
                            <a:v>
                                <![CDATA[EN:<html><p>                
                                    Configuration of the Fls (internal or external flash driver) module.
                                </p></html>]]>
                            </a:v>
                        </a:a>
                        <a:a name="LOWER-MULTIPLICITY" value="1"/>
                        <a:a name="UPPER-MULTIPLICITY" value="*"/>
                        <a:a name="UUID" value="ECUC:e52b316c-bd52-4069-84a5-e31f8cbbeb1c"/>
                        <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                            <a:a name="LABEL" value="Config Variant"/>
                            <a:a name="UUID" value="ECUC:1e828024-b141-43f8-9df9-54c7e529fe45"/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:<html>
                                        <p>VariantPostBuild: Mix of precompile and postbuild time configuration parameters.<br>
                                        If Config Variant = VariantPostBuild, the files Fls_Cfg.h and Fls_PBcfg.c should be used.<br>
                                        If Config Variant = VariantPreCompile, the files Fls_Cfg.h and Fls_Cfg.c should be used.
                                        </p>
                                    </html>]]>
                                </a:v>                    
                            </a:a>
                            <a:da name="DEFAULT" value="VariantPostBuild"/>
                            <a:da name="RANGE">
                                <a:v>VariantPostBuild</a:v>
                                <a:v>VariantPreCompile</a:v>
                            </a:da>
                        </v:var>                      
                        <!-- @implements FlsConfigSet_Object -->
                        <v:ctr name="FlsConfigSet" type="IDENTIFIABLE">
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:<html><p>                
                                      Container for runtime configuration parameters of the flash driver.<br>
                                      Implementation Type: Fls_ConfigType.
                                    </p></html>]]>
                                </a:v>
                            </a:a>
                            <a:a name="UUID" value="ECUC:7c955003-8f1a-45da-b0bc-2dc4cf578656"/>
                            
                            <!-- @implements FlsAcErase_Object --> 
                            <v:var name="FlsAcErase" type="INTEGER">
                                <a:a name="LABEL" value="Fls Access Code Erase"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Address offset in RAM to which the erase flash access code shall be loaded.
                                            Used as function pointer to access the erase flash access code.<br>
                                            Note: To use Fls Access Code Erase be sure Fls Access Code Erase Pointer is NULL or NULL_PTR.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>                  
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:b3fc83a8-3afc-4a05-8b81-4d25a14dab38"/>
                                <a:da name="DEFAULT" type="XPath" expr="num:hextoint('0x40002500')"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=4294967295"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                            </v:var>

                            <!-- @implements FlsAcWrite_Object -->
                            <v:var name="FlsAcWrite" type="INTEGER">
                                <a:a name="LABEL" value="Fls Access Code Write"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Address offset in RAM to which the write flash access code shall be loaded.
                                            Used as function pointer to access the write flash access code.<br>
                                            Note: To use Fls Access Code Write be sure Fls Access Code Write Pointer is NULL or NULL_PTR.
                                        </p></html>]]>
                                    </a:v>                  
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:1b7ab0ea-0cd9-4dbf-b421-fdfd319624ec"/>
                                <a:da name="DEFAULT" type="XPath">
                                    <a:tst expr="num:hextoint('0x40002500')"/>
                                </a:da>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=4294967295"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                            </v:var>
                            
                            <!-- @implements FlsAcErasePointer_Object -->
                            <v:var name="FlsAcErasePointer" type="FUNCTION-NAME">
                                <a:a name="LABEL" value="Fls Access Code Erase Pointer"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Vendor specific: Pointer in RAM to which the erase flash access code shall be loaded.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:20131ae6-4fd7-4bcc-b5bd-d3ae75dad50d"/>
                                <a:da name="DEFAULT" value="NULL_PTR"/>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                                           false="Invalid name of the Fls Access Code Erase Pointer. Must be valid C function name, NULL_PTR, or NULL."/>
                                </a:da>
                            </v:var>
                          
                            <!-- @implements FlsAcWritePointer_Object -->
                            <v:var name="FlsAcWritePointer" type="FUNCTION-NAME">
                                <a:a name="LABEL" value="Fls Access Code Write Pointer"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Vendor specific: Pointer in RAM to which the write flash access code shall be loaded.
                                            Used as function pointer to access the write flash access code.
                                        </p></html>]]>
                                    </a:v>                  
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:1800a775-9b52-43f5-99a2-8cd2e0ab131b"/>
                                <a:da name="DEFAULT" value="NULL_PTR"/>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                                           false="Invalid name of the Fls Access Code Write Pointer. Must be valid C function name, NULL_PTR, or NULL."/>
                                </a:da>
                            </v:var>  
                          
                            <v:var name="FlsCallCycle" type="FLOAT">
                                <a:a name="LABEL" value="Fls Call Cycle"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Cycle time of calls of the flash driver main function<br>Note:<br>Not supported by the driver.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:4449efe4-5d5d-41d0-accb-4fb9ad4bae49"/>
                                <a:da name="DEFAULT" value="0.0"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=1.0"/>
                                    <a:tst expr="&gt;=0.0"/>
                                </a:da>
                            </v:var>
                            
                            <!-- @implements FlsDefaultMode_Object -->
                            <v:var name="FlsDefaultMode" type="ENUMERATION">
                                <a:a name="LABEL" value="Fls Default Mode"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            This parameter is the default FLS device mode after initialization.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:b28133f6-757f-42be-8bae-e24cf6e9a3d0"/>
                                <a:da name="DEFAULT" value="MEMIF_MODE_SLOW"/>
                                <a:da name="RANGE">
                                    <a:v>MEMIF_MODE_FAST</a:v>
                                    <a:v>MEMIF_MODE_SLOW</a:v>
                                </a:da>
                            </v:var>
                          
                            <v:var name="FlsACCallback" type="FUNCTION-NAME">
                                <a:a name="LABEL" value="Fls AC Callback"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                              Vendor specific: Mapped to the Access Code Callback provided by some upper layer module, typically the Wdg module.<br>
                                              Note: Disable the Access Code Callback to have it set as NULL_PTR.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:2a7a7c10-c021-44da-b37b-134377236163"/>
                                <a:da name="EDITABLE" value="true"/>
                                <a:da name="DEFAULT" value="Fls_AC_Callback"/>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                                           false="Invalid name of the Fls AC Callback. Must be valid C function name."/>
                                    <a:tst expr="(not(normalize-space(.) = 'NULL_PTR') and not(normalize-space(.) = 'NULL'))"
                                           false="Invalid name of the Fls AC Callback. Must not be NULL_PTR or NULL."/>
                                </a:da>
                            </v:var> 
         
                            <v:var name="FlsJobEndNotification" type="FUNCTION-NAME">
                                <a:a name="LABEL" value="Fls Job End Notification"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Mapped to the job end notification routine provided by some upper layer module, typically the Fee module.<br>
                                            Note: Disable the end notification to have it set as NULL_PTR
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>    
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:bf476e30-7c7b-406c-9ed5-850380c1f713"/>
                                <a:da name="EDITABLE" value="true"/>
                                <a:a name="OPTIONAL" value="true"/>
                                <a:da name="DEFAULT" value="Fee_JobEndNotification"/>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                                           false="Invalid name of the Fls Job End Notification routine. Must be valid C function name."/>
                                    <a:tst expr="(not(normalize-space(.) = 'NULL_PTR') and not(normalize-space(.) = 'NULL'))"
                                           false="Invalid name of the Fls Job End Notification routine. Must not be NULL_PTR or NULL."/>
                                </a:da>
                            </v:var>
               
                            <v:var name="FlsJobErrorNotification" type="FUNCTION-NAME">
                                <a:a name="LABEL" value="Fls Job Error Notification"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Mapped to the job error notification routine provided by some upper layer module, typically the Fee module.<br>
                                            Note: Disable the error notification to have it set as NULL_PTR
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:be60ad33-3805-4eb7-a561-eaf24a204f0b"/>
                                <a:da name="EDITABLE" value="true"/>
                                <a:a name="OPTIONAL" value="true"/>
                                <a:da name="DEFAULT" value="Fee_JobErrorNotification"/>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                                           false="Invalid name of the Fls Job Error Notification routine. Must be valid C function name."/>
                                    <a:tst expr="(not(normalize-space(.) = 'NULL_PTR') and not(normalize-space(.) = 'NULL'))"
                                           false="Invalid name of the Fls Job Error Notification routine. Must not be NULL_PTR or NULL."/>
                                </a:da>
                            </v:var>                    
                            <!--  -->
                            <v:var name="FlsStartFlashAccessNotif" type="FUNCTION-NAME">
                                <a:a name="LABEL" value="Fls Start Flash Access Notification"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Start flash access. If configured, this notification will be called before any flash memory access.<br>
                                            It is called before flash memory read accesses(in read, compare, verify write, verify erase jobs) and
                                            before flash memory program operations(in write and erase jobs).<br>
                                            The purpose of this notification together with FlsFinishedFlashAccess, is to ensure that, if needed, no other
                                            executed code(other tasks, cores, masters) will access the affected flash area simultaneously with the access
                                            initiated by the driver. For more details, see Integration manual, chapter 5. Module requirements.<br>
                                            Note: Disable the error notification to have it set as NULL_PTR
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>  
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="ORIGIN" value="NXP"/>   
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>                                
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:be60ad33-3805-4eb7-a561-eac24a204f0b"/>
                                <a:da name="EDITABLE" value="true"/>
                                <a:da name="DEFAULT" value="Fls_StartFlashAccessNotif"/>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                                           false="Invalid name of the Fls Start Flash Access Notification routine. Must be valid C function name."/>
                                    <a:tst expr="(not(normalize-space(.) = 'NULL_PTR') and not(normalize-space(.) = 'NULL'))"
                                           false="Invalid name of the Fls Start Flash Access Notification routine. Must not be NULL_PTR or NULL."/>
                                </a:da>
                            </v:var>    
                         
                            <!--  -->
                            <v:var name="FlsFinishedFlashAccessNotif" type="FUNCTION-NAME">
                                <a:a name="LABEL" value="Fls Finished Flash Access Notifications"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Finished flash access. If configured, this notification will be called after any flash memory access.<br>
                                            It is called after flash memory read accesses(in read, compare, verify write, verify erase jobs) and
                                            after flash memory program operations(in write and erase jobs).<br>
                                            The purpose of this notification together with FlsStartFlashAccess, is to ensure that, if needed, no other
                                            executed code(other tasks, cores, masters) will access the affected flash area simultaneously with the access
                                            initiated by the driver. For more details, see Integration manual, chapter 5. Module requirements.<br>
                                            Note: Disable the error notification to have it set as NULL_PTR
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>  
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="ORIGIN" value="NXP"/> 
                                <a:a name="SCOPE" value="LOCAL"/>                                
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>                                
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:be60ad33-3805-4eb7-a561-ead24a204f0b"/>
                                <a:da name="EDITABLE" value="true"/>
                                <a:da name="DEFAULT" value="Fls_FinishedFlashAccessNotif"/>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                                           false="Invalid name of the Fls Finished Flash Access Notifications routine. Must be valid C function name."/>
                                    <a:tst expr="(not(normalize-space(.) = 'NULL_PTR') and not(normalize-space(.) = 'NULL'))"
                                           false="Invalid name of the Fls Finished Flash Access Notifications routine. Must not be NULL_PTR or NULL."/>
                                </a:da>
                            </v:var>    
                         
                            <!-- FlsQspiInitCallout -->
                            <v:var name="FlsQspiInitCallout" type="FUNCTION-NAME">
                                <a:a name="LABEL" value="Fls Qspi Init Callout"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Callout function called by the driver at the end of the QSPI Init phase.</br>
                                            The intended purpose of this callout is to provide to the application the 
                                            possibility of performing additional configuration to the QSPI hardware IP or
                                            to the external memories connected(for ex: sending the lock/unlock sequences 
                                            for the external flash sectors, altering QSPI IP timing, etc.)</br>
                                            Note: Disable the callout in order to have it set as NULL_PTR.</br>
                                            Note: The callout can be configured only if the FlsExternalDriver is enabled.</br>
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>  
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="ORIGIN" value="NXP"/> 
                                <a:a name="SCOPE" value="LOCAL"/>                                
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>                        
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:be60ad33-3805-4eb7-a561-eaa24a204f0b"/>
                                <a:da name="EDITABLE" type="XPath">
                                    <a:tst expr="node:fallback(../FlsExternalDriver,0) = 0"/>
                                </a:da>
                                <a:da name="DEFAULT" value="FlsQspiInitCallout"/>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                                           false="Invalid name of the the job error notification routine. Must be valid C function name."/>
                                    <a:tst expr="(not(normalize-space(.) = 'NULL_PTR') and not(normalize-space(.) = 'NULL'))"
                                           false="Invalid name of the the job error notification routine. Must not be NULL_PTR or NULL."/>
                                </a:da>
                            </v:var> <!-- FlsQspiInitCallout -->   
                         
                            <!-- FlsQspiResetCallout -->
                            <v:var name="FlsQspiResetCallout" type="FUNCTION-NAME">
                                <a:a name="LABEL" value="Fls Qspi Reset Callout"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Callout function called by the driver at the beginning of a new job.</br>
                                            The intended purpose of this callout is to provide to the application the 
                                            possibility of reseting the external memory to an idle and error free state.</br>
                                            If the callout is disabled, at the beginnig of a new job the Fls_MainFunction will
                                            check the external memory status and if not, poll and wait for it to become idle.</br>
                                            If the callout is enabled and the memory is not idle, the Fls_MainFunction will 
                                            also call the configured function to allow the application to send extra commands to the 
                                            external memory(software reset, abort any suspended operation, error flags clearing, etc.)</br>
                                            Note: Disable the callout in order to have it set as NULL_PTR.</br>
                                            Note: The callout can be configured only if the FlsExternalDriver is enabled.</br>
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>  
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>                                
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>                         
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:be60ad33-3805-4eb7-a561-eaa24a214f0b"/>
                                <a:da name="EDITABLE" type="XPath">
                                    <a:tst expr="node:fallback(../FlsExternalDriver,0) = 0"/>
                                </a:da>
                                <a:da name="DEFAULT" value="FlsQspiResetCallout"/>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                                           false="Invalid name of the the job error notification routine. Must be valid C function name."/>
                                    <a:tst expr="(not(normalize-space(.) = 'NULL_PTR') and not(normalize-space(.) = 'NULL'))"
                                           false="Invalid name of the the job error notification routine. Must not be NULL_PTR or NULL."/>
                                </a:da>
                            </v:var> <!-- FlsQspiResetCallout -->    
                         
                            <!-- FlsQspiErrorCheckCallout -->
                            <v:var name="FlsQspiErrorCheckCallout" type="FUNCTION-NAME">
                                <a:a name="LABEL" value="Fls Qspi Program and Erase Error Check Callout"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Callout function called by the driver at the end of each program and erase job </br>
                                            The intended purpose of this callout is to provide to the application the 
                                            possibility of interrogating the error status of the memory after each program and erase job.
                                            The application should check any error or status bits available and reset the memory after interrogation 
                                            in case an error condition was detected.</br>
                                            If the callout is enabled, at the end of each job, the callout is called and the return
                                            value is checked to determine if there was any error during the memory operation.</br>
                                            Return values: E_OK(0) E_NOT_OK(1).</br>
                                            If E_OK(0) is received, the job is considered successful.</br>
                                            If E_NOT_OK(1) is received, the job is considered unsuccessful and marked as failed.</br>
                                            If the callout is disabled, the job is assumed as successful from the memory status point of view.</br>
                                            Note: Disable the callout in order to have it set as NULL_PTR.</br>
                                            Note: The callout can be configured only if the FlsExternalDriver is enabled.</br>
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>  
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="ORIGIN" value="NXP"/> 
                                <a:a name="SCOPE" value="LOCAL"/>                                
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>                        
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:be60ad33-3805-4eb7-a561-eaa25a214f0b"/>
                                <a:da name="EDITABLE" type="XPath">
                                    <a:tst expr="node:fallback(../FlsExternalDriver,0) = 0"/>
                                </a:da>
                                <a:da name="DEFAULT" value="FlsQspiErrorCheckCallout"/>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                                           false="Invalid name of the the job error notification routine. Must be valid C function name."/>
                                    <a:tst expr="(not(normalize-space(.) = 'NULL_PTR') and not(normalize-space(.) = 'NULL'))"
                                           false="Invalid name of the the job error notification routine. Must not be NULL_PTR or NULL."/>
                                </a:da>
                            </v:var> <!-- FlsQspiErrorCheckCallout -->
                            
                            <!-- FlsQspiErrorCheckCallout -->
                            <v:var name="FlsQspiEccCheckCallout" type="FUNCTION-NAME">
                                <a:a name="LABEL" value="Fls Qspi Ecc Check Callout"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Callout function called by the driver at the end of each read operation </br>
                                            The intended purpose of this callout is to provide to the application the 
                                            possibility of interrogating the ECC status of the memory after each read operation.
                                            The callout provide the hardware channel, start address and the size of the read operation.
                                            The application should check there is any ECC error in the current read data </br>
                                            If the callout is enabled, at the end of each read operation, the callout is called and the return
                                            value is checked to determine if there was any error during the memory operation.</br>
                                            Return values: E_OK(0) E_NOT_OK(1).</br>
                                            If E_OK(0) is received, the job is considered successful.</br>
                                            If E_NOT_OK(1) is received, the job is considered unsuccessful and marked as failed.</br>
                                            If the callout is disabled, the job is assumed as successful from the memory status point of view.</br>
                                            Note: Disable the callout in order to have it set as NULL_PTR.</br>
                                            Note: The callout can be configured only if the FlsExternalDriver is enabled.</br>
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>  
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="ORIGIN" value="NXP"/> 
                                <a:a name="SCOPE" value="LOCAL"/>                                
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>                        
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:be60ad33-3805-4eb7-a561-eaa25a214f0c"/>
                                <a:da name="EDITABLE" type="XPath">
                                    <a:tst expr="node:fallback(../FlsExternalDriver,0) = 0"/>
                                </a:da>
                                <a:da name="DEFAULT" value="FlsQspiEccCheckCallout"/>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                                           false="Invalid name of the the job error notification routine. Must be valid C function name."/>
                                    <a:tst expr="(not(normalize-space(.) = 'NULL_PTR') and not(normalize-space(.) = 'NULL'))"
                                           false="Invalid name of the the job error notification routine. Must not be NULL_PTR or NULL."/>
                                </a:da>
                            </v:var> <!-- FlsQspiErrorCheckCallout -->                             
                            
                            <!-- @implements FlsMaxReadFastMode_Object -->
                            <v:var name="FlsMaxReadFastMode" type="INTEGER">
                                <a:a name="LABEL" value="Fls Max Read FastMode"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            The maximum number of bytes to read or compare in one cycle of the flash driver&apos;s job processing function in fast mode. <br>
                                            <b>Note</b>: If external sectors are configured and if FlsHwUnitWordAddressable is set,
                                            the FlsMaxReadFastMode must be an even value(two bytes aligned). 
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>      
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:5274eaa4-75ac-416f-99fd-f2a4e5f38483"/>
                                <a:da name="DEFAULT" value="1048576"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=4294967295"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                            </v:var>
                            
                            <!-- @implements FlsMaxReadNormalMode_Object -->
                            <v:var name="FlsMaxReadNormalMode" type="INTEGER">
                                <a:a name="LABEL" value="Fls Max Read Normal Mode"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            The maximum number of bytes to read or compare in one cycle of the flash driver&apos;s job processing function in normal mode. <br>
                                            <b>Note</b>: If external sectors are configured and if FlsHwUnitWordAddressable is set,
                                            the FlsMaxReadNormalMode must be an even value(two bytes aligned). 
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>       
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:a8740fe8-79f9-46f5-9877-9a99a1027705"/>
                                <a:da name="DEFAULT" value="1024"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=4294967295"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                            </v:var>
                            
                            <!-- @implements FlsMaxWriteFastMode_Object -->
                            <v:var name="FlsMaxWriteFastMode" type="INTEGER">
                                <a:a name="LABEL" value="Fls Max Write Fast Mode"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            The maximum number of bytes to write in one cycle of the flash driver&apos;s job processing function in fast mode. <br>
                                            <b>Note</b>: If external sectors are configured, the FlsMaxWriteFastMode must be an integer multiple of the FlsPageSize.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:846b9fb1-a788-4392-a2f9-7d4bde7c6bad"/>
                                <a:da name="DEFAULT" value="256"/>
                                <a:da name="RANGE" type="XPath">
                                    <a:tst expr="node:fallback( ., 8 ) > 0 and node:fallback( ., 8 ) mod 8 = 0" false="Must be greater than zero and integer multiple of the page size."/>
                                </a:da>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=4294967295"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="(node:exists(../../../../../Fee/ELEMENTS/Fee)) and ((node:value(./../../FlsGeneral/FlsCancelApi))='true') and  (node:value(.)  &lt;  node:when(node:fallback(node:value(../../../../../Fee/ELEMENTS/Fee/FeeGeneral/FeeVirtualPageSize),16)  &lt;  16,16,node:value(../../../../../Fee/ELEMENTS/Fee/FeeGeneral/FeeVirtualPageSize)))" true="Incompatible FLS configuration. If the Fls_Cancel API is enabled in the FLS driver used by the FEE, the FlsMaxWriteFastMode parameter value cannot be smaller than the size of the FEE Block/Cluster Header or the size of the FEE virtual page, whichever is larger. Disable Fls_Cancel API, increase the FlsMaxWriteFastMode parameter value in the given FlsConfigSet, or select a sector from a compatible FlsConfigSet."/>
                                </a:da>
                            </v:var>
                            
                            <!-- @implements FlsMaxWriteNormalMode_Object -->
                            <v:var name="FlsMaxWriteNormalMode" type="INTEGER">
                                <a:a name="LABEL" value="Fls Max Write Normal Mode"/>
                                <a:a name="DESC">
                                    <a:v>
                                    <![CDATA[EN:<html><p>
                                            The maximum number of bytes to write in one cycle of the flash driver&apos;s job processing function in normal mode. <br>
                                            <b>Note</b>: If external sectors are configured, the FlsMaxWriteFastMode must be an integer multiple of the FlsPageSize. 
                                    </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v> 
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:627edf03-4c45-4a3c-8960-de18707306ae"/>
                                <a:da name="DEFAULT" value="8"/>
                                <a:da name="RANGE" type="XPath">
                                    <a:tst expr="node:fallback( ., 8 ) > 0 and node:fallback( ., 8 ) mod 8 = 0" false="Must be greater than zero and integer multiple of the page size."/>
                                </a:da>                    
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=4294967295"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="(node:exists(../../../../../Fee/ELEMENTS/Fee)) and ((node:value(./../../FlsGeneral/FlsCancelApi))='true') and  (node:value(.)  &lt;  node:when(node:fallback(node:value(../../../../../Fee/ELEMENTS/Fee/FeeGeneral/FeeVirtualPageSize),16)  &lt;  16,16,node:value(../../../../../Fee/ELEMENTS/Fee/FeeGeneral/FeeVirtualPageSize)))"
                                    true="Incompatible FLS configuration. If the Fls_Cancel API is enabled in the FLS driver used by the FEE, the FlsMaxWriteNormalMode parameter value cannot be smaller than the size of the FEE Block/Cluster Header or the size of the FEE virtual page, whichever is larger. Disable Fls_Cancel API, increase the FlsMaxWriteNormalMode parameter value in the given FlsConfigSet, or select a sector from a compatible FlsConfigSet."/>
                                </a:da>
                            </v:var>
                            
                            <v:var name="FlsProtection" type="INTEGER">
                                <a:a name="LABEL" value="Fls Protection"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Erase/write protection settings. Only relevant if supported by hardware.<br>Note:<br>Not supported by the driver.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/> 
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="ECUC:a2cd01b5-a833-4375-ba6f-54c319ced705"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=4294967295"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                            </v:var>

                            <!-- @implements FlsExternalDriver_Object -->
                            <v:ctr name="FlsExternalDriver" type="IDENTIFIABLE">
                                <a:a name="LABEL" value="Fls External Driver"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            This container is present for external Flash drivers only. Internal Flash drivers do not use the parameter listed in this container, hence its multiplicity is 0 for internal drivers.
                                        </p></html>]]>
                                    </a:v>                  
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="UUID" value="ECUC:8508fe60-8e3a-4798-a289-da5cb72069c7"/>
                                <a:da name="EDITABLE" type="XPath">
                                    <a:tst expr="( num:i(count(ecu:list(&apos;Fls.External.HwUnit&apos;))) != 0)"/>
                                </a:da>
                                
                                <v:ref name="FlsSpiReference" type="SYMBOLIC-NAME-REFERENCE">
                                    <a:a name="LABEL" value="Fls Spi Reference"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html><p>
                                                Reference to SPI sequence. Not used in current implementation.
                                            </p></html>]]>
                                        </a:v>                  
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:da name="EDITABLE" value="false"/>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="VISIBLE" value="false"/>                                    
                                    <a:a name="UUID" value="ECUC:bda02515-58f5-426d-8037-ed88b1bef246"/>
                                    <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Spi/SpiDriver/SpiSequence"/>
                                </v:ref>

                                <!-- FlsHwUnit -->
                                <v:lst name="FlsHwUnit" type="MAP">
                                    <a:da name="MIN" value="1"/>
                                    <a:da name="INVALID" type="XPath">
                                    <a:tst expr="num:i(count(./*)) &lt; num:i(count(ecu:list(&apos;Fls.External.HwUnit&apos;)))" 
                                           true=" FlsHwUnit have max number of External Hw Unit."/>
                                    </a:da> 

                                    <!-- FlsHwUnit -->
                                    <v:ctr name="FlsHwUnit" type="IDENTIFIABLE">
                                        <a:a name="LABEL" value="Fls Hw Unit" />
                                        <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html><p>
                                                    Container for the configuration of the avaialable external flash memory hardware units.
                                                </p></html>]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>                                        
                                        <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ebf"/>
                                        <a:da name="INVALID" type="XPath">
                                            <a:tst expr="(node:exists(node:fallback(./FlsQspiLutSeqIdRefs,0)))"
                                                    false="FlsQspiLutSeqIdRefs should be enabled."/>
                                        </a:da>
                                        <!-- FlsHwUnitMapping -->
                                        <v:var name="FlsHwUnitName" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hw Unit Name" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        The name of the configured harwdare unit name. The configured parameters will apply to this hardware unit name only.<br /> 
                                                        The name of the hardware unit name represents the physical hardware unit available on chip.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>           
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ec0"/>
                                            <a:da name="DEFAULT" type="XPath" expr="(ecu:list(&apos;Fls.External.HwUnit&apos;))[position()-1=node:fallback(node:current()/../@index,'0')]"/>
                                            <a:da name="RANGE" type="XPath" expr="ecu:list(&apos;Fls.External.HwUnit&apos;)"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="text:uniq(../../*/FlsHwUnitName, .)" false="Duplicate hardware unit name"/>
                                            </a:da>
                                            
                                        </v:var><!-- FlsHwUnitName -->
                                        
                                        <!-- TIMING PARAMETERS -->
                                        
                                        <!-- FlsHwUnitReadMode -->
                                        <v:var name="FlsHwUnitReadMode" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hw Unit Read Mode" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        The hardware unit read mode:<br />
                                                        FLS_SDR (single data rate) which samples incoming data on a single edge.<br />
                                                        FLS_DDR (double data rate) which samples incoming data on both edges.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>            
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ec1"/>
                                            <a:da name="DEFAULT">
                                                <a:v>FLS_SDR</a:v>
                                            </a:da>
                                            <a:da name="RANGE">
                                                <a:v>FLS_SDR</a:v>
                                                <a:v>FLS_DDR</a:v>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitReadMode -->

  
<!-- Implementation specific. -->   
                                        
                                        <!-- FlsHwUnitDqsMode -->
                                        <v:var name="FlsHwUnitDqsMode" type="BOOLEAN">
                                            <a:a name="LABEL" value="Fls Hw Unit DQS Mode Enabled" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Enables DQS sampling mode. If enabled, two DQS sampling modes are available(Internal loopback DQS and Pad loopback DQS).<br />
                                                        If disabled, only Internal sampling mode is available.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>            
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d4030bd6ec9"/>
                                            <a:da name="DEFAULT" value="false"/>
                                        </v:var><!-- FlsHwUnitDqsMode --> 
                                        
                                        <!-- FlsHwUnitInputPadsBufferEn -->
                                        <v:var name="FlsHwUnitInputPadsBufferEn" type="BOOLEAN">
                                            <a:a name="LABEL" value="Fls Hw Unit Input Pads Buffers Enable" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Enables input buffer of QSPI pads for SDR modes.<br />
                                                        SCLKCFG[7].<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>           
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d4130bd6ec9"/>
                                            <a:da name="DEFAULT" value="true"/>
                                        </v:var><!-- FlsHwUnitInputPadsBufferEn -->  
                                        
                                        <!-- FlsHwUnitInputClockSel -->
                                        <v:var name="FlsHwUnitInputClockSel" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hw Unit Input Clock Selection" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Select source for AHB read interface clock, module clock and bus interface clock.<br />                                                        
                                                        SCLKCFG[6] bit.<br />
                                                        Option 1: BUS_CLK.<br />
                                                        Option 2: SYS_CLK.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d4230bd6ec4"/>
                                            <a:da name="DEFAULT">
                                                <a:v>FLS_QSPI_SYS_CLK</a:v>
                                            </a:da>
                                            <a:da name="RANGE">
                                                <a:v>FLS_QSPI_SYS_CLK</a:v>
                                                <a:v>FLS_QSPI_BUS_CLK</a:v>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitInputClockSel -->  
                                        
                                        <!-- FlsHwUnitInternalRefClockSel -->
                                        <v:var name="FlsHwUnitInternalRefClockSel" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hw Unit Internal Reference Clock Selection" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Source clock for external QSPI clock(SFCK) sent to the memory.<br />                                                        
                                                        SCLKCFG[4] bit.<br />                                                   
                                                        Option 1: SPLLDIV1.<br />                                                   
                                                        Option 2: FIRCDIV1.<br />                                                   
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>            
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d4330bd6ec4"/>
                                            <a:da name="DEFAULT">
                                                <a:v>FLS_QSPI_SPLLDIV1</a:v>
                                            </a:da>
                                            <a:da name="RANGE">
                                                <a:v>FLS_QSPI_SPLLDIV1</a:v>
                                                <a:v>FLS_QSPI_FIRCDIV1</a:v>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitInternalRefClockSel --> 
                                        
                                        <!-- FlsHwUnitDqsBStage2ClkSource -->
                                        <v:var name="FlsHwUnitDqsBStage2ClkSource" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hw Unit DQS B Stage2 Clock Source" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Select source clock for DQS B Stage 2 clock.<br />                                                        
                                                        SCLKCFG[3] bit.<br />                                                   
                                                        Option 1: INVERTED.<br />                                                   
                                                        Option 2: NON-INVERTED.<br />                                                       
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>           
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d4430bd6ec4"/>
                                            <a:da name="DEFAULT">
                                                <a:v>FLS_QSPI_DQS_INVERTED</a:v>
                                            </a:da>
                                            <a:da name="RANGE">
                                                <a:v>FLS_QSPI_DQS_INVERTED</a:v>
                                                <a:v>FLS_QSPI_DQS_NONINVERTED</a:v>
                                            </a:da>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="(../FlsHwUnitDqsMode ='true')"/>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitDqsBStage2ClkSource --> 
                                        
                                        <!-- FlsHwUnitDqsBStage1ClkSource -->
                                        <v:var name="FlsHwUnitDqsBStage1ClkSource" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hw Unit DQS B Stage1 Clock Source" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Select source clock for DQS B Stage 1 clock.<br />                                                        
                                                        SCLKCFG[2] bit.<br />                                                   
                                                        Option 1: DQS_INTERNAL. DQS internal loopback clock.<br />                                                   
                                                        Option 2: DQS_LOOPBACK. DQS pad loopback clock, derived from SCKB pad.<br />                                                         
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>           
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d4530bd6ec4"/>
                                            <a:da name="DEFAULT">
                                                <a:v>FLS_QSPI_DQS_INTERNAL</a:v>
                                            </a:da>
                                            <a:da name="RANGE">
                                                <a:v>FLS_QSPI_DQS_INTERNAL</a:v>
                                                <a:v>FLS_QSPI_DQS_LOOPBACK</a:v>
                                            </a:da>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="(../FlsHwUnitDqsMode ='true')"/>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitDqsBStage1ClkSource --> 
                                        
                                        <!-- FlsHwUnitDqsAStage2ClkSource -->
                                        <v:var name="FlsHwUnitDqsAStage2ClkSource" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hw Unit DQS A Stage2 Clock Source" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Select source clock for DQS A Stage 2 clock.<br />                                                        
                                                        SCLKCFG[1] bit.<br />                                                   
                                                        Option 1: INVERTED.<br />                                                   
                                                        Option 2: NON-INVERTED.<br />                                                         
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d4630bd6ec4"/>
                                            <a:da name="DEFAULT">
                                                <a:v>FLS_QSPI_DQS_INVERTED</a:v>
                                            </a:da>
                                            <a:da name="RANGE">
                                                <a:v>FLS_QSPI_DQS_INVERTED</a:v>
                                                <a:v>FLS_QSPI_DQS_NONINVERTED</a:v>
                                            </a:da>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="(../FlsHwUnitDqsMode ='true')"/>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitDqsAStage2ClkSource --> 
                                        
                                        <!-- FlsHwUnitDqsAStage1ClkSource -->
                                        <v:var name="FlsHwUnitDqsAStage1ClkSource" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hw Unit DQS A Stage1 Clock Source" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Select source clock for DQS A Stage 1 clock.<br />                                                        
                                                        SCLKCFG[0] bit.<br />                                                   
                                                        Option 1: DQS_INTERNAL. DQS internal loopback clock.<br />                                                   
                                                        Option 2: DQS_LOOPBACK. DQS pad loopback clock, derived from SCKB pad.<br />                                                          
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>           
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d4730bd6ec4"/>
                                            <a:da name="DEFAULT">
                                                <a:v>FLS_QSPI_DQS_INTERNAL</a:v>
                                            </a:da>
                                            <a:da name="RANGE">
                                                <a:v>FLS_QSPI_DQS_INTERNAL</a:v>
                                                <a:v>FLS_QSPI_DQS_LOOPBACK</a:v>
                                            </a:da>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="(../FlsHwUnitDqsMode ='true')"/>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitDqsAStage1ClkSource --> 
                                                                                
                                        <!-- FlsHwUnitPendingReadBusGasket -->
                                        <v:var name="FlsHwUnitPendingReadBusGasket" type="BOOLEAN">
                                            <a:a name="LABEL" value="Fls Hw Unit Pending Read Bus Gasket" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Pending read enable controls the bus gasket’s handling of pending read transactions.<br />
                                                        SOCCFG[16].<br />
                                                        0: Pending reads are disabled.<br />
                                                        1: Pending reads are enabled, yielding a performance improvement through the gasket.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d5130bd6ec9"/>
                                            <a:da name="DEFAULT" value="false"/>
                                        </v:var><!-- FlsHwUnitPendingReadBusGasket --> 
                                                                                
                                        <!-- FlsHwUnitBurstReadBusGasket -->
                                        <v:var name="FlsHwUnitBurstReadBusGasket" type="BOOLEAN">
                                            <a:a name="LABEL" value="Fls Hw Unit Burst Read Bus Gasket" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Burst read enable controls the bus gasket’s handling of burst read transactions.<br />
                                                        SOCCFG[17].<br />
                                                        0: Burst reads are converted into a series of single transactions on the slave side of the gasket.<br />
                                                        1: Burst reads are optimized for best system performance.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>           
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d5230bd6ec9"/>
                                            <a:da name="DEFAULT" value="false"/>
                                        </v:var><!-- FlsHwUnitBurstReadBusGasket --> 
                                                                                
                                        <!-- FlsHwUnitBurstWriteBusGasket -->
                                        <v:var name="FlsHwUnitBurstWriteBusGasket" type="BOOLEAN">
                                            <a:a name="LABEL" value="Fls Hw Unit Burst Write Bus Gasket" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Burst writes enable controls the bus gasket’s handling of burst read transactions.<br />
                                                        SOCCFG[18].<br />
                                                        0: Burst writes are converted into a series of single transactions on the slave side of the gasket.<br />
                                                        1: Burst writes are optimized for best system performance. Note this setting treats writes as
                                                           imprecise such that an error response on any beat of the burst is reported on the last beat.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d5330bd6ec9"/>
                                            <a:da name="DEFAULT" value="false"/>
                                        </v:var><!-- FlsHwUnitBurstWriteBusGasket --> 
                                                                                
                                        <!-- FlsHwUnitProgrammableDivider -->
                                        <v:var name="FlsHwUnitProgrammableDivider" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hw Unit Programmable Divider" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Programmable divider configuration selection. Based on this devider value, the external memory clock and
                                                        internal sampling clock is derived.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>           
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d5430bd6ec9"/>
                                            <a:da name="DEFAULT">
                                                <a:v>FLS_PGM_DIV_1</a:v>
                                            </a:da>
                                            <a:da name="RANGE">
                                                <a:v>FLS_PGM_DIV_1</a:v>
                                                <a:v>FLS_PGM_DIV_2</a:v>
                                                <a:v>FLS_PGM_DIV_3</a:v>
                                                <a:v>FLS_PGM_DIV_4</a:v>
                                                <a:v>FLS_PGM_DIV_5</a:v>
                                                <a:v>FLS_PGM_DIV_6</a:v>
                                                <a:v>FLS_PGM_DIV_7</a:v>
                                                <a:v>FLS_PGM_DIV_8</a:v>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitProgrammableDivider -->   
                                                                                
                                        <!-- IdleSignalDriveIOFB3HighLvl -->
                                        <v:var name="IdleSignalDriveIOFB3HighLvl" type="BOOLEAN">
                                            <a:a name="LABEL" value="Idle Signal Drive IOFB3 High Level" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Idle Signal Drive IOFB[3] Flash B. This bit determines the logic level the IOFB[3] output of the 
                                                        QuadSPI module is driven to in the inactive state.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>            
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d5530bd6ec9"/>
                                            <a:da name="DEFAULT" value="true"/>
                                        </v:var><!-- IdleSignalDriveIOFB3HighLvl -->   
                                                                                
                                        <!-- IdleSignalDriveIOFB2HighLvl -->
                                        <v:var name="IdleSignalDriveIOFB2HighLvl" type="BOOLEAN">
                                            <a:a name="LABEL" value="Idle Signal Drive IOFB2 High Level" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Idle Signal Drive IOFB[2] Flash B. This bit determines the logic level the IOFB[2] output of the 
                                                        QuadSPI module is driven to in the inactive state.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d5630bd6ec9"/>
                                            <a:da name="DEFAULT" value="true"/>
                                        </v:var><!-- IdleSignalDriveIOFB2HighLvl --> 
                                                                                
                                        <!-- IdleSignalDriveIOFA3HighLvl -->
                                        <v:var name="IdleSignalDriveIOFA3HighLvl" type="BOOLEAN">
                                            <a:a name="LABEL" value="Idle Signal Drive IOFA3 High Level" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Idle Signal Drive IOFA[3] Flash A. This bit determines the logic level the IOFA[3] output of the 
                                                        QuadSPI module is driven to in the inactive state.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>            
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d5630bd6ed9"/>
                                            <a:da name="DEFAULT" value="true"/>
                                        </v:var><!-- IdleSignalDriveIOFA3HighLvl -->   
                                                                                
                                        <!-- IdleSignalDriveIOFA2HighLvl -->
                                        <v:var name="IdleSignalDriveIOFA2HighLvl" type="BOOLEAN">
                                            <a:a name="LABEL" value="Idle Signal Drive IOFA2 High Level" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Idle Signal Drive IOFA[2] Flash A. This bit determines the logic level the IOFA[2] output of the 
                                                        QuadSPI module is driven to in the inactive state.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d5730bd6ec9"/>
                                            <a:da name="DEFAULT" value="true"/>
                                        </v:var><!-- IdleSignalDriveIOFA2HighLvl --> 

                                        
         
                                        <!-- FlsHwUnitSamplingEdge -->
                                        <v:var name="FlsHwUnitSamplingEdge" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hw Unit Sampling Edge" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        The hardware unit sampling edge. Selects the edge of the sampling clock valid for full speed commands.<br />
                                                        This option is also used in DQS mode and ignored when using non-DQS DDR instructions.<br />
                                                        FLS_RISING: Select sampling at non-inverted internal DQS (use rising edge).<br />
                                                        FLS_FALLING: Select sampling at inverted internal DQS (use falling edge).<br />
                                                        The sampling edge selection is valid only for FLS_SDR mode, not FLS_DDR.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ee1"/>
                                            <a:da name="DEFAULT">
                                                <a:v>FLS_RISING</a:v>
                                            </a:da>
                                            <a:da name="RANGE">
                                                <a:v>FLS_RISING</a:v>
                                                <a:v>FLS_FALLING</a:v>
                                            </a:da>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="(../FlsHwUnitReadMode ='FLS_SDR')"/>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitSamplingEdge -->
                                        
                                        <!-- FlsHwUnitSamplingDly -->
                                        <v:var name="FlsHwUnitSamplingDly" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hw Unit Sampling Delay" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Full Speed Delay selection for SDR instructions. Select the delay with respect to the 
                                                        reference edge for the sample point valid for full speed commands.<br />
                                                        This option is also used in DQS mode and ignored when using non-DQS DDR instructions.<br />
                                                        FLS_1SAMPLE_DLY: Select sampling with one samples delay.<br />
                                                        FLS_2SAMPLE_DLY: Select sampling with two samples delay.<br />
                                                        The sampling delay selection is valid only for FLS_SDR mode, not FLS_DDR.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>           
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-3d3d30bd6ec9"/>
                                            <a:da name="DEFAULT">
                                                <a:v>FLS_1SAMPLE_DLY</a:v>
                                            </a:da>
                                            <a:da name="RANGE">
                                                <a:v>FLS_1SAMPLE_DLY</a:v>
                                                <a:v>FLS_2SAMPLE_DLY</a:v>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitSamplingDly -->
                                        
                                        <!-- FlsHwUnitSamplingPoint -->
                                        <v:var name="FlsHwUnitSamplingPoint" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Hw Unit Sampling Point" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        DDR Sampling point. <br />
                                                        Selects the sampling point for incoming data when serial flash is executing a DDR instruction.<br />
                                                        The sampling edge selection is valid only for FLS_DDR mode, not FLS_SDR.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>           
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-3d3d30fd6ec9"/>
                                            <a:da name="DEFAULT">
                                                <a:v>0</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&gt;=i(0)"/>
                                                <a:tst expr="&lt;=i(7)"/>
                                            </a:da>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="(../FlsHwUnitReadMode ='FLS_DDR') and (../FlsHwUnitSamplingMode='FLS_INTERNAL_4X')"/>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitSamplingPoint -->
                                        
                                        <!-- FlsHwUnitDqsLatencyEnable -->
                                        <v:var name="FlsHwUnitDqsLatencyEnable" type="BOOLEAN">
                                            <a:a name="LABEL" value="Fls Hw Unit Dqs Latency Enable" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        DQS Latency Enable. Feature used to support external devices which add latency cycles
                                                        in the DQS signal. When no signal is provided by the external devices, data is not sampled,
                                                        thus the memory stretches the timing.<br />
                                                        DQS Latency is applicable only for DQS sampling mode: FLS_EXTERNAL_DQS.
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ec9"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                                                                                                    <a:tst expr="(../FlsHwUnitDqsMode ='true')"/>
                                                                                        </a:da>
                                        </v:var><!-- FlsHwUnitDqsLatencyEnable -->
                                        
                                        <!-- FlsHwUnitFineDelayA -->
                                        <v:var name="FlsHwUnitFineDelayA" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Hw Unit Fine Delay A" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        The hardware unit fine delay: Coarse delay value, applicable for FLS_INTERNAL_DQS and FLS_EXTERNAL_DQS sampling modes.<br />
                                                        Fine delay applicable to Flash A.<br />
                                                        0 - 63 delay units. <br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-6d3d30bd6ec5"/>
                                            <a:da name="DEFAULT">
                                                <a:v>0</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                                                                                                        <a:tst expr="&gt;=i(0)"/>
                                                <a:tst expr="&lt;=i(127)"/> 
                                                                                        </a:da>
                                            <a:da name="EDITABLE" type="XPath">
                                                                                                                                        <a:tst expr="(../FlsHwUnitDqsMode ='true')"/>
                                                                                        </a:da>
                                        </v:var><!-- FlsHwUnitFineDelayA -->
                                        
                                        <!-- FlsHwUnitFineDelayB -->
                                        <v:var name="FlsHwUnitFineDelayB" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Hw Unit Fine Delay B" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        The hardware unit fine delay: Coarse delay value, applicable for FLS_INTERNAL_DQS and FLS_EXTERNAL_DQS sampling modes.<br />
                                                        Fine delay applicable to Flash B.<br />
                                                        0 - 63 delay units. <br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>           
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ec5"/>
                                            <a:da name="DEFAULT">
                                                <a:v>0</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                                                                                                        <a:tst expr="&gt;=i(0)"/>
                                                <a:tst expr="&lt;=i(127)"/> 
                                                                                        </a:da>
                                            <a:da name="EDITABLE" type="XPath">
                                                                                                                                        <a:tst expr="(../FlsHwUnitDqsMode ='true')"/>
                                                                                        </a:da>
                                        </v:var><!-- FlsHwUnitFineDelayB -->
                                        
                                        <!-- FlsHwUnitTdh -->
                                        <v:var name="FlsHwUnitTdh" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hw Unit TDH" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        TDH: Serial flash data in hold time. Should be set to FLS_ALIGNED_INT_REF_CLK for FLS_SDR mode.<br />
                                                        TDH parameter delays data sent to flash, in order to meet the input hold time requirement of flash.<br />
                                                        FLS_ALIGNED_INT_REF_CLK =  Data aligned with the posedge of Internal reference clock of QuadSPI.<br />
                                                        FLS_ALIGNED_2X_CLK      =  Data aligned with 2x serial flash half clock.<br />
                                                        FLS_ALIGNED_4X_CLK      =  Data aligned with 4x serial flash half clock.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>           
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ec6"/>
                                            <a:da name="DEFAULT">
                                                <a:v>FLS_ALIGNED_INT_REF_CLK</a:v>
                                            </a:da>
                                            <a:da name="RANGE">
                                                <a:v>FLS_ALIGNED_INT_REF_CLK</a:v>
                                                <a:v>FLS_ALIGNED_2X_CLK</a:v>
                                                <a:v>FLS_ALIGNED_4X_CLK</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(../FlsHwUnitReadMode ='FLS_SDR') and (. != 'FLS_ALIGNED_INT_REF_CLK')" 
                                                       true="TDH should be set to FLS_ALIGNED_INT_REF_CLK for FLS_SDR mode. Select FLS_DDR mode, change value then revert to FLS_SDR mode."/>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitTdh -->
                                        
                                        <!-- FlsHwUnitTcsh -->
                                        <v:var name="FlsHwUnitTcsh" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Hw Unit TCSH" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        TCSH: Serial flash CS hold time in terms of serial flash clock cycles.<br />
                                                        A bigger value will release the CS signal later after the transaction ends.<br />
                                                        The actual delay between chip select and clock is defined as:
                                                            TCSH = 1 SCK clk if N= 0/1 else, N SCK clk if N>1, where N is the setting of TCSH
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ec7"/>
                                            <a:da name="DEFAULT">
                                                <a:v>0</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&gt;=i(0)"/>
                                                <a:tst expr="&lt;=i(15)"/>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitTcsh -->
                                        
                                        <!-- FlsHwUnitTcss -->
                                        <v:var name="FlsHwUnitTcss" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Hw Unit TCSS" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        TCSS: Serial flash CS setup time in terms of serial flash clock cycles.<br />
                                                        A bigger value will pull the CS signal earlier before the transaction starts.<br />
                                                        The actual delay between chip select and clock is defined as:
                                                            TCSS = 0.5 SCK clk if N= 0/1 else, N+0.5 SCK clk if N>1, where N is the setting of TCSS.
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ec8"/>
                                            <a:da name="DEFAULT">
                                                <a:v>0</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&gt;=i(0)"/>
                                                <a:tst expr="&lt;=i(15)"/>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitTcss -->
                                        
                                        <!-- MEMORY PARAMETERS -->
                                        
                                        <!-- FlsHwUnitEndianness -->
                                        <v:var name="FlsHwUnitEndianness" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hw Unit Endianness" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Defines the endianness of the QuadSPI module, which can swap the orderd of the read/write data.<br />
                                                        By default the data is always returned in 64 bit LE format on the AHB bus and 32 bit LE format on the 
                                                        IPS interface when read via the RX buffer and written in 32 bit LE format when written via the TX buffer.<br />
                                                        FLS_BIG_ENDIAN_64    = 64 bit BE.<br />
                                                        FLS_LITTLE_ENDIAN_32 = 32 bit LE.<br />
                                                        FLS_BIG_ENDIAN_32    = 32 bit BE.<br />
                                                        FLS_LITTLE_ENDIAN_64 = 64 bit LE.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>            
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6eca"/>
                                            <a:da name="DEFAULT">
                                                <a:v>FLS_LITTLE_ENDIAN_64</a:v>
                                            </a:da>
                                            <a:da name="RANGE">
                                                <a:v>FLS_BIG_ENDIAN_64</a:v>
                                                <a:v>FLS_LITTLE_ENDIAN_32</a:v>
                                                <a:v>FLS_BIG_ENDIAN_32</a:v>
                                                <a:v>FLS_LITTLE_ENDIAN_64</a:v>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitEndianness -->
                                        
                                        <!-- FlsHwUnitReadBufferMode -->
                                        <v:var name="FlsHwUnitReadBufferMode" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hw Unit Read Buffer Mode" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Selects the read buffer mode: IP buffer or AHB buffer.<br />
                                                        If AHB mode is used, read transactions are triggered by memory mapped access
                                                        and data read from external flash device is stored inside the AHB buffers.<br />
                                                        If IP mode is used, read transactions are triggered by IP commands
                                                        and data read from external flash device is stored inside the RX buffer.<br />
                                                        TBC.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>           
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ecb"/>
                                            <a:da name="INVALID" type="XPath">
                                            <a:tst expr="((.) ='FLS_AHB_READ_MODE') and ((num:i(count(../FlsAhbBuffer/*)) &lt; 4))"
                                                   true="It is needed to configure all four AHB buffer instances when using FLS_AHB_READ_MODE"/>
                                            </a:da>
                                            <a:da name="DEFAULT">
                                                <a:v>FLS_AHB_READ_MODE</a:v>
                                            </a:da>
                                            <a:da name="RANGE">
                                                <a:v>FLS_AHB_READ_MODE</a:v>
                                                <a:v>FLS_IP_READ_MODE</a:v>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitReadBufferMode -->
                                        
                                        <!-- FlsHwUnitRxBufferAccessMode -->
                                        <v:var name="FlsHwUnitRxBufferAccessMode" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hw Unit Read Bus Mode" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Selects the bus(AHB or IP) used to access the RX Buffer content.<br />
                                                        This setting is only applicable for RX Buffer, thus is applicable only for IP bus mode, otherwise
                                                        the AHB buffers are used instead of the RX Buffer.<br />
                                                        TBC.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d40bd6ecb"/>
                                            <a:da name="DEFAULT">
                                                <a:v>FLS_RXBUFFER_IP_BUS_ACCESS</a:v>
                                            </a:da>
                                            <a:da name="RANGE">
                                                <a:v>FLS_RXBUFFER_AHB_BUS_ACCESS</a:v>
                                                <a:v>FLS_RXBUFFER_IP_BUS_ACCESS</a:v>
                                            </a:da>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="(../FlsHwUnitReadBufferMode ='FLS_IP_READ_MODE')"/>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitRxBufferAccessMode -->
                                                                                
                                        <!-- FlsHwUnitColumnAddressWidth -->
                                        <v:var name="FlsHwUnitColumnAddressWidth" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Hw Unit Column Address Width" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Column Address Space. Defines the width of the column address.<br />
                                                        Example: If the coulmn address is for example [2:0] of QSPI_SFAR/AHB address,
                                                        then CAS must be 3. If there is no column address separation in any 
                                                        serial flash this value must be programmed to 0.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ea8"/>
                                            <a:da name="DEFAULT">
                                                <a:v>0</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&gt;=i(0)"/>
                                                <a:tst expr="&lt;=i(15)"/>
                                            </a:da>
                                        </v:var><!-- FlsHwUnitColumnAddressWidth -->
                                        
                                        <!-- FlsHwUnitWordAddressable -->
                                        <v:var name="FlsHwUnitWordAddressable" type="BOOLEAN">
                                            <a:a name="LABEL" value="Fls Hw Unit Word Addressable" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Defines whether the serial flash is a byte addressable flash or a word addressable flash. 
                                                        According to this bit configuration the address is re-mapped to the flash interface.<br />
                                                        DISABLED: Byte addressable serial flash mode.<br />
                                                        ENABLED: Word (2 byte) addressable serial flash mode. If the 
                                                        incoming address is 0x2004, the controller re-maps this address 
                                                        to access the flash location 0x1002.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5a3d30bd6ec9"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:da name="READONLY" value="true"/>
                                        </v:var><!-- FlsHwUnitWordAddressable -->
                                        
                                        <!-- FlsSerialFlashA1TopAddr -->
                                        <v:var name="FlsSerialFlashA1TopAddr" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Serial Flash A1 Top Address" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        The address mapping for the serial flash A1 external memory device.<br />
                                                        All accesses targeting the memory range [TOP_ADDR_MEMA1(SFA1AD) - QSPI_AMBA_BASE]
                                                        will be directed to flash memory A1.<br />
                                                        The memory range should be configured to the size of the external memory.<br />
                                                        If an external device is not attached, or not used on this channel, the value
                                                        of the register can be set the same as the previous one, thus allocating no space.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d40bd6ed0"/>  
                                            <a:a name="DEFAULT_RADIX" value="HEX" />
                                            <a:da name="DEFAULT" type="XPath" 
                                                expr="node:when( 
                                                        node:fallback(../FlsHwUnitName,'FLS_QSPI_0')='FLS_QSPI_0', 
                                                        num:hextoint(ecu:get('Fls.External.HwUnit.Qspi0.SFA1AD.Default')), 
                                                        num:hextoint(ecu:get('Fls.External.HwUnit.Qspi1.SFA1AD.Default')) 
                                                    )"/>
                                            <a:a name="INVALID" type="Range">
                                                <a:tst expr="&gt;=0"/>
                                                <a:tst expr="&lt;=4294967295"/>
                                            </a:a>
                                        </v:var><!-- FlsSerialFlashA1TopAddr -->
                                        
                                        <!-- FlsSerialFlashA2TopAddr -->
                                        <v:var name="FlsSerialFlashA2TopAddr" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Serial Flash A2 Top Address" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        The address mapping for the serial flash A2 external memory device.<br />
                                                        All accesses targeting the memory range [TOP_ADDR_MEMA2(SFA2AD) - TOP_ADDR_MEMA1(SFA1AD)]
                                                        will be directed to flash memory A2.<br />
                                                        The memory range should be configured to the size of the external memory.<br />
                                                        If an external device is not attached, or not used on this channel, the value
                                                        of the register can be set the same as the previous one, thus allocating no space.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>          
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d40bd6ed1"/>  
                                            <a:a name="DEFAULT_RADIX" value="HEX" />
                                            <a:da name="DEFAULT" type="XPath" 
                                                expr="node:when( 
                                                        node:fallback(../FlsHwUnitName,'FLS_QSPI_0')='FLS_QSPI_0', 
                                                        num:hextoint(ecu:get('Fls.External.HwUnit.Qspi0.SFA2AD.Default')), 
                                                        num:hextoint(ecu:get('Fls.External.HwUnit.Qspi1.SFA2AD.Default')) 
                                                    )"/>
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="num:i(../FlsSerialFlashA1TopAddr) > num:i(.)" 
                                                        true="Current flash device top address value should be greater than the previous one, or equal to it 
                                                               in case there is no external device connected to this port."/>
                                            </a:da>
                                            <a:a name="INVALID" type="Range">
                                                <a:tst expr="&gt;=0"/>
                                                <a:tst expr="&lt;=4294967295"/>
                                            </a:a>
                                        </v:var><!-- FlsSerialFlashA2TopAddr -->
                                        
                                        <!-- FlsSerialFlashB1TopAddr -->
                                        <v:var name="FlsSerialFlashB1TopAddr" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Serial Flash B1 Top Address" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        The address mapping for the serial flash B1 external memory device.<br />
                                                        All accesses targeting the memory range [TOP_ADDR_MEMB1(SFB1AD) - TOP_ADDR_MEMA2(SFA2AD)]
                                                        will be directed to flash memory B1.<br />
                                                        The memory range should be configured to the size of the external memory.<br />
                                                        If an external device is not attached, or not used on this channel, the value
                                                        of the register can be set the same as the previous one, thus allocating no space.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>           
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d40bd6ed2"/>  
                                            <a:a name="DEFAULT_RADIX" value="HEX" />
                                            <a:da name="DEFAULT" type="XPath" 
                                                expr="node:when( 
                                                        node:fallback(../FlsHwUnitName,'FLS_QSPI_0')='FLS_QSPI_0', 
                                                        num:hextoint(ecu:get('Fls.External.HwUnit.Qspi0.SFB1AD.Default')), 
                                                        num:hextoint(ecu:get('Fls.External.HwUnit.Qspi1.SFB1AD.Default')) 
                                                    )"/>
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="num:i(../FlsSerialFlashA2TopAddr) > num:i(.)" 
                                                        true="Current flash device top address value should be greater than the previous one, or equal to it 
                                                               in case there is no external device connected to this port."/>
                                            </a:da>
                                            <a:a name="INVALID" type="Range">
                                                <a:tst expr="&gt;=0"/>
                                                <a:tst expr="&lt;=4294967295"/>
                                            </a:a>
                                        </v:var><!-- FlsSerialFlashB1TopAddr -->
                                        
                                        <!-- FlsSerialFlashB2TopAddr -->
                                        <v:var name="FlsSerialFlashB2TopAddr" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Serial Flash B2 Top Address" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        The address mapping for the serial flash B2 external memory device.<br />
                                                        All accesses targeting the memory range [TOP_ADDR_MEMB2(SFB2AD) - TOP_ADDR_MEMB1(SFB1AD)]
                                                        will be directed to flash memory B2.<br />
                                                        The memory range should be configured to the size of the external memory.<br />
                                                        If an external device is not attached, or not used on this channel, the value
                                                        of the register can be set the same as the previous one, thus allocating no space.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>           
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d40bd6ed3"/>  
                                            <a:a name="DEFAULT_RADIX" value="HEX" />
                                            <a:da name="DEFAULT" type="XPath" 
                                                expr="node:when( 
                                                        node:fallback(../FlsHwUnitName,'FLS_QSPI_0')='FLS_QSPI_0', 
                                                        num:hextoint(ecu:get('Fls.External.HwUnit.Qspi0.SFB2AD.Default')), 
                                                        num:hextoint(ecu:get('Fls.External.HwUnit.Qspi1.SFB2AD.Default')) 
                                                    )"/>
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="num:i(../FlsSerialFlashB1TopAddr) > num:i(.)" 
                                                        true="Current flash device top address value should be greater than the previous one, or equal to it 
                                                               in case there is no external device connected to this port."/>
                                            </a:da>
                                            <a:a name="INVALID" type="Range">
                                                <a:tst expr="&gt;=0"/>
                                                <a:tst expr="&lt;=4294967295"/>
                                            </a:a>
                                        </v:var><!-- FlsSerialFlashB2TopAddr -->
                                        
                                        <!-- FlsAhbBuffer -->
                                        <v:lst name="FlsAhbBuffer" type="MAP">
                                            <a:da name="MIN" value="0"/>                
                                            <a:da name="MAX" value="4"/>
                                            
                                            
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="(../FlsHwUnitReadBufferMode ='FLS_AHB_READ_MODE')"/>
                                            </a:da>
                                            <v:ctr name="FlsAhbBuffer" type="IDENTIFIABLE">
                                                <a:a name="LABEL" value="Fls Ahb Buffer" />
                                                <a:a name="DESC">
                                                    <a:v>
                                                        <![CDATA[EN:<html><p>
                                                            Container for the configuration of the AHB read buffers. Holds the configuration for each
                                                            AHB buffer configured for AHB read mode.
                                                        </p></html>]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ecd"/>
                                                
                                                <!-- FlsAhbBufferInstance -->
                                                <v:var name="FlsAhbBufferInstance" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Fls Ahb Buffer Instance" />
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html><p>
                                                                Selects the AHB buffer instance for which this configuration applies.<br />
                                                                If an instance is not present, the corresponding AHB buffer will be configured with size 0.<br />
                                                                The size of the AHB_BUFFER_3 instance will be configured to at least the selected size, or more, up until the maximum
                                                                value is reached. For more details about the maximum avaialable size see chip specific details.<br />
                                                            </p></html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SCOPE" value="LOCAL"/>          
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ece"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list(&apos;Fls.External.HwUnit.Ahb.Buffers&apos;))[position()-1=node:fallback(node:current()/../@index,'1')]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list(&apos;Fls.External.HwUnit.Ahb.Buffers&apos;)"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="text:uniq(../../*/FlsAhbBufferInstance, .)" 
                                                                false="Duplicate AHB buffer instance, select another buffer."/>
                                                        <a:tst expr="(node:fallback( ../@index, 0 ) != 0) and 
                                                                      node:when(node:value(node:fallback( ., 0 )) = 'AHB_BUFFER_0',
                                                                      1,
                                                                      0)" 
                                                            true="AHB buffer instance is not ordered. If configured AHB_BUFFER_0 should be the first in the list."/>
                                                        <a:tst expr="(node:fallback( ../@index, 0 ) != 0) and 
                                                                      node:when(node:value(node:fallback( ., 0 )) = 'AHB_BUFFER_1',
                                                                      node:value(../../*[position() = num:i(node:current()/../@index)]/FlsAhbBufferInstance) != 'AHB_BUFFER_0',
                                                                      0)" 
                                                            true="AHB buffer instance is not ordered. If configured and not the first in the list, AHB_BUFFER_1 should follow AHB_BUFFER_0"/>
                                                        <a:tst expr="(node:fallback( ../@index, 0 ) != 0) and 
                                                                      node:when(node:value(node:fallback( ., 0 )) = 'AHB_BUFFER_2',
                                                                      node:value(../../*[position() = num:i(node:current()/../@index)]/FlsAhbBufferInstance) != 'AHB_BUFFER_1',
                                                                      0)" 
                                                            true="AHB buffer instance is not ordered. If configured and not the first in the list, AHB_BUFFER_2 should follow AHB_BUFFER_1"/>
                                                        <a:tst expr="(node:fallback( ../@index, 0 ) != 0) and 
                                                                      node:when(node:value(node:fallback( ., 0 )) = 'AHB_BUFFER_3',
                                                                      node:value(../../*[position() = num:i(node:current()/../@index)]/FlsAhbBufferInstance) != 'AHB_BUFFER_2',
                                                                      0)" 
                                                            true="AHB buffer instance is not ordered. If configured and not the first in the list, AHB_BUFFER_3 should follow AHB_BUFFER_2"/>
                                                    </a:da>
                                                </v:var><!-- FlsAhbBufferInstance -->
                                                
                                                <!-- FlsAhbBufferMasterId -->
                                                <v:var name="FlsAhbBufferMasterId" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Fls Ahb Buffer Master ID" />
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html><p>
                                                                The ID of the AHB master associated with this buffer. Any AHB access with this master port
                                                                number is routed to this buffer. It must be ensured that the master IDs associated with all 
                                                                buffers must be different.<br />
                                                            </p></html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SCOPE" value="LOCAL"/> 
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ecf"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list(&apos;Fls.External.HwUnit.Ahb.MasterID&apos;))[position()-1=node:fallback(node:current()/../@index,'1')]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list(&apos;Fls.External.HwUnit.Ahb.MasterID&apos;)"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="text:uniq(text:split(node:fallback(../../*/FlsAhbBufferMasterId, 1)), node:fallback(., 1))" 
                                                               false="The master ID associated with this buffer must be unique. "/> 
                                                    </a:da>
                                                </v:var><!-- FlsAhbBufferMasterId -->
                                                
                                                <!-- FlsAhbBufferSize -->
                                                <v:var name="FlsAhbBufferSize" type="INTEGER">
                                                    <a:a name="LABEL" value="Fls Ahb Buffer Size" />
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html><p>
                                                                The size allocated to this AHB Buffer instance. The minimum size is 8 bytes, the maximum size 
                                                                is the entire AHB Buffers section size(1024 bytes). There is no benefit in configuring a buffer size
                                                                greater than FlsAhbBufferDataTransferSize, as the locations greater than this will never be used.<br />
                                                            </p></html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SCOPE" value="LOCAL"/>  
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ed0"/>
                                                    <a:da name="DEFAULT" value="0"/>
                                                    <a:da name="RANGE" type="XPath">
                                                        <a:tst expr="node:fallback( ., 1) > num:i(ecu:get('Fls.External.HwUnit.Ahb.BufferSize') )" 
                                                            true="Maximum total AHB buffers size exceeded."/>
                                                        <a:tst expr="(node:fallback( ., 1) mod 8) != 0" 
                                                            true="AHB Buffer size has to be a multiple of 8 bytes."/>
                                                        <a:tst expr="sum(../../*/FlsAhbBufferSize) != num:i(ecu:get('Fls.External.HwUnit.Ahb.BufferSize'))" 
                                                            true="Total size of all configured AHB buffers does not match the size of the entire AHB buffer. Modify the AHB buffer size in order to cover the entire 1024 bytes."/>    
                                                    </a:da>  
                                                    <a:a name="INVALID" type="Range">
                                                        <a:tst expr="&gt;=0"/>
                                                        <a:tst expr="&lt;=4294967295"/>
                                                    </a:a>
                                                </v:var><!-- FlsAhbBufferSize -->
                                                
                                                <!-- FlsAhbBufferDataTransferSize -->
                                                <v:var name="FlsAhbBufferDataTransferSize" type="INTEGER">
                                                    <a:a name="LABEL" value="Fls Ahb Buffer Data Transfer Size" />
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html><p>
                                                                Defines the data transfer size in bytes of an AHB triggered access to serial flash (ADATSZ bitfield). 
                                                                When value is 0, default, the data size mentioned the sequence pointed to by the SEQID field overrides this value. 
                                                                Software should ensure that this transfer size is not greater than the size of this buffer.<br />
                                                                <br>Note:<br> When this value is 0,the data size mentioned in the LUT sequence pointed to by the SEQID field overrides this value.<br />
                                                            </p></html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SCOPE" value="LOCAL"/>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>   
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ed1"/>
                                                    <a:da name="DEFAULT" value="0"/>
                                                    <a:da name="RANGE" type="XPath">
                                                        <a:tst expr="node:fallback( ., 1) > num:i(ecu:get('Fls.External.HwUnit.Ahb.BufferSize'))" 
                                                            true="Data transfer size exceeds maximum total AHB buffers size."/>
                                                        <a:tst expr="(node:fallback( ., 1) mod 8) != 0" 
                                                            true="Data transfer size has to be a multiple of 8 bytes."/>
                                                        <a:tst expr="node:fallback( ., 1) > node:fallback( ../FlsAhbBufferSize, 1)" 
                                                            true="Data transfer size has to be smaller or equal than the AHB buffer size, recommended to be equal."/>
                                                    </a:da>
                                                     <a:a name="INVALID" type="Range">
                                                        <a:tst expr="&gt;=0"/>
                                                        <a:tst expr="&lt;=4294967295"/>
                                                    </a:a>
                                                </v:var><!-- FlsAhbBufferDataTransferSize -->
                                                
                                                <!-- FlsAhbBufferAllMasters -->     
                                                <v:var name="FlsAhbBufferAllMasters" type="BOOLEAN">
                                                    <a:a name="LABEL" value="Fls Ahb Buffer All Masters Enable"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html><p>
                                                                When set, buffer3 acts as an all-master buffer. Any AHB access with a master port
                                                                number not matching with the master ID of buffer0 or buffer1 or buffer2 is routed to buffer3. 
                                                                When set, the Master ID parameter for this buffer is ignored.
                                                            </p></html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SCOPE" value="LOCAL"/> 
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ed2"/>
                                                    <a:da name="DEFAULT" type="XPath" expr=" node:fallback(../FlsAhbBufferInstance, '') = 'AHB_BUFFER_3' "/>   
                                                    <a:da name="EDITABLE" type="XPath">
                                                        <a:tst expr="(../FlsAhbBufferInstance ='AHB_BUFFER_3')"/>
                                                    </a:da>
                                                </v:var><!-- FlsAhbBufferAllMasters -->
                                                
                                                <!-- FlsAhbBufferHighPriority -->     
                                                <v:var name="FlsAhbBufferHighPriority" type="BOOLEAN">
                                                    <a:a name="LABEL" value="Fls Ahb Buffer High Priority Enable"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html><p>
                                                                When set, the master associated with buffer0 is assigned a priority higher than the
                                                                rest of the masters. An access by a high priority master will suspend any ongoing prefetch by another AHB
                                                                master and will be serviced on high priority.
                                                            </p></html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SCOPE" value="LOCAL"/>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>   
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd7425"/>
                                                    <a:da name="DEFAULT" value="false"/>
                                                    <a:da name="EDITABLE" type="XPath">
                                                        <a:tst expr="(../FlsAhbBufferInstance ='AHB_BUFFER_0')"/>
                                                    </a:da>
                                                </v:var><!-- FlsAhbBufferHighPriority -->                                                                     
                                                                                                
                                            </v:ctr> <!-- FlsAhbBuffer -->                                            
                                        </v:lst><!-- FlsAhbBuffer -->

                                        <!-- FlsQspiLutSeqIdRefs -->
                                        <v:ctr name="FlsQspiLutSeqIdRefs" type="IDENTIFIABLE">
                                            <a:a name="LABEL" value="Fls Qspi LUT Sequence ID References"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Container for the references to the QSPI LUT Sequences ID. The ID is used as a pointer to the 
                                                        correct position of the LUT sequence inside the LUT. 
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="OPTIONAL" value="true"/>
                                            <a:a name="UUID" value="ECUC:c18974ae-c38e-4f28-93ef-e913c9f1aa8b"/>
                                            <a:da name="EDITABLE" value="true"/>
                                                   
                                            <!-- FlsLUTGetStatusSequenceIdRef -->
                                            <v:ref name="FlsLUTGetStatusSequenceIdRef" type="REFERENCE">
                                                <a:a name="LABEL" value="Fls LUT Get Status Sequence ID Reference" />
                                                <a:a name="DESC">
                                                    <a:v>
                                                        <![CDATA[EN:<html><p>
                                                            Reference to the LUT Sequence ID which will be used for getting the status(idle/busy) of the external memory.<br />
                                                            Command is used for polling the job status of the external memory, usually by reading the external memory status register.<br />
                                                            TBC.<br />
                                                        </p></html>]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                </a:a>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SCOPE" value="LOCAL"/>  
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30ad6ed3"/>
                                                <a:da name="EDITABLE" value="true"/>
                                                <a:da name="REF" value="ASPathDataOfSchema:/TS_T40D2M10I2R0/Fls/FlsConfigSet/FlsExternalDriver/FlsHwUnit/FlsLUT"/>   
                                                <a:da name="RANGE" type="XPath">
                                                    <a:tst expr="node:paths(../../FlsLUT/*)"/> <!-- Select for reference only the LUT sequences configured in this HW unit. -->
                                                </a:da>
                                                <a:da name="INVALID" type="XPath">
                                                    <a:tst expr="node:refvalid(.)" 
                                                            false="The configured node does not exist or may not be referenced."/>
                                                    <a:tst expr="(node:fallback( ., 0 ) != node:fallback( ../FlsLUTWriteSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTEraseSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTReadSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTReadIdSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTWriteEnableSequenceIdRef, 0 ))" 
                                                            false="Same LUT sequence is configured for two different hardware operations. Choose a different LUT sequence reference."/>
                                                </a:da>
                                            </v:ref><!-- FlsLUTGetStatusSequenceIdRef -->
                                                                                                                                                                                                            
                                            <!-- FlsLUTReadSequenceIdRef -->
                                            <v:ref name="FlsLUTReadSequenceIdRef" type="REFERENCE">
                                                <a:a name="LABEL" value="Fls LUT Read Sequence ID Reference" />
                                                <a:a name="DESC">
                                                    <a:v>
                                                        <![CDATA[EN:<html><p>
                                                            Reference to the LUT Sequence ID which will be used for read and compare operations, in both AHB and IP modes.<br />
                                                        </p></html>]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                </a:a>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SCOPE" value="LOCAL"/>  
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ed3"/>
                                                <a:da name="EDITABLE" value="true"/>
                                                <a:da name="REF" value="ASPathDataOfSchema:/TS_T40D2M10I2R0/Fls/FlsConfigSet/FlsExternalDriver/FlsHwUnit/FlsLUT"/>   
                                                <a:da name="RANGE" type="XPath">
                                                    <a:tst expr="node:paths(../../FlsLUT/*)"/> <!-- Select for reference only the LUT sequences configured in this HW unit. -->
                                                </a:da>
                                                <a:da name="INVALID" type="XPath">
                                                    <a:tst expr="node:refvalid(.)" 
                                                            false="The configured node does not exist or may not be referenced."/>
                                                    <a:tst expr="(node:fallback( ., 0 ) != node:fallback( ../FlsLUTWriteSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTEraseSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTGetStatusSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTReadIdSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTWriteEnableSequenceIdRef, 0 ))" 
                                                            false="Same LUT sequence is configured for two different hardware operations. Choose a different LUT sequence reference."/>
                                                </a:da>
                                            </v:ref><!-- FlsLUTReadSequenceIdRef -->
                                                                                    
                                            <!-- FlsLUTWriteEnableSequenceIdRef -->
                                            <v:ref name="FlsLUTWriteEnableSequenceIdRef" type="REFERENCE">
                                                <a:a name="LABEL" value="Fls LUT Write Enable Sequence ID Reference" />
                                                <a:a name="DESC">
                                                    <a:v>
                                                        <![CDATA[EN:<html><p>
                                                            Reference to the LUT Sequence ID which will be used prior to write/erase operations, 
                                                            in order to set the write enable latch.<br />
                                                        </p></html>]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                </a:a>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SCOPE" value="LOCAL"/>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                                <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30dd6ed9"/>
                                                <a:da name="EDITABLE" value="true"/>
                                                <a:da name="REF" value="ASPathDataOfSchema:/TS_T40D2M10I2R0/Fls/FlsConfigSet/FlsExternalDriver/FlsHwUnit/FlsLUT"/>  
                                                <a:da name="RANGE" type="XPath">
                                                    <a:tst expr="node:paths(../../FlsLUT/*)"/>
                                                </a:da>                                           
                                                <a:da name="INVALID" type="XPath">
                                                    <a:tst expr="node:refvalid(.)" 
                                                            false="The configured node does not exist or may not be referenced."/>
                                                    <a:tst expr="(node:fallback( ., 0 ) != node:fallback( ../FlsLUTReadSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTEraseSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTGetStatusSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTReadIdSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTWriteSequenceIdRef, 0 ))" 
                                                            false="Same LUT sequence is configured for two different hardware operations. Choose a different LUT sequence reference."/>
                                                </a:da>
                                            </v:ref><!-- FlsLUTWriteEnableSequenceIdRef -->
                                                                                    
                                            <!-- FlsLUTWriteSequenceIdRef -->
                                            <v:ref name="FlsLUTWriteSequenceIdRef" type="REFERENCE">
                                                <a:a name="LABEL" value="Fls LUT Write Sequence ID Reference" />
                                                <a:a name="DESC">
                                                    <a:v>
                                                        <![CDATA[EN:<html><p>
                                                            Reference to the LUT Sequence ID which will be used for write operations.<br />
                                                        </p></html>]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                </a:a>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SCOPE" value="LOCAL"/>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                                <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ed9"/>
                                                <a:da name="EDITABLE" value="true"/>
                                                <a:da name="REF" value="ASPathDataOfSchema:/TS_T40D2M10I2R0/Fls/FlsConfigSet/FlsExternalDriver/FlsHwUnit/FlsLUT"/>  
                                                <a:da name="RANGE" type="XPath">
                                                    <a:tst expr="node:paths(../../FlsLUT/*)"/>
                                                </a:da>                                           
                                                <a:da name="INVALID" type="XPath">
                                                    <a:tst expr="node:refvalid(.)" 
                                                            false="The configured node does not exist or may not be referenced."/>
                                                    <a:tst expr="(node:fallback( ., 0 ) != node:fallback( ../FlsLUTReadSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTEraseSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTGetStatusSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTReadIdSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTWriteEnableSequenceIdRef, 0 ))" 
                                                            false="Same LUT sequence is configured for two different hardware operations. Choose a different LUT sequence reference."/>
                                                </a:da>
                                            </v:ref><!-- FlsLUTWriteSequenceIdRef -->
                                            
                                            <!-- FlsLUTEraseSequenceIdRef -->
                                            <v:ref name="FlsLUTEraseSequenceIdRef" type="REFERENCE">
                                                <a:a name="LABEL" value="Fls LUT Erase Sequence ID Reference" />
                                                <a:a name="DESC">
                                                    <a:v>
                                                        <![CDATA[EN:<html><p>
                                                            Reference to the LUT Sequence ID which will be used for erase operations.<br />
                                                        </p></html>]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                </a:a>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SCOPE" value="LOCAL"/> 
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                                <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6eda"/>
                                                <a:da name="EDITABLE" value="true"/>
                                                <a:da name="REF" value="ASPathDataOfSchema:/TS_T40D2M10I2R0/Fls/FlsConfigSet/FlsExternalDriver/FlsHwUnit/FlsLUT"/>  
                                                <a:da name="RANGE" type="XPath">
                                                    <a:tst expr="node:paths(../../FlsLUT/*)"/>
                                                </a:da>
                                                <a:da name="INVALID" type="XPath">
                                                    <a:tst expr="node:refvalid(.)" 
                                                            false="The configured node does not exist or may not be referenced."/>
                                                    <a:tst expr="(node:fallback( ., 0 ) != node:fallback( ../FlsLUTReadSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTWriteSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTGetStatusSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTReadIdSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTWriteEnableSequenceIdRef, 0 ))" 
                                                            false="Same LUT sequence is configured for two different hardware operations. Choose a different LUT sequence reference."/>
                                                </a:da>
                                            </v:ref><!-- FlsLUTEraseSequenceIdRef -->
                                            
                                            <!-- FlsLUTReadIdSequenceIdRef -->
                                            <v:ref name="FlsLUTReadIdSequenceIdRef" type="REFERENCE">
                                                <a:a name="LABEL" value="Fls LUT Read Id Sequence ID Reference" />
                                                <a:a name="DESC">
                                                    <a:v>
                                                        <![CDATA[EN:<html><p>
                                                            Reference to the LUT Sequence ID which will be used for erase operations.<br />
                                                            Note: When this sequence reference is enabled, the user should enable and configure also the FLS_E_UNEXPECTED_FLASH_ID
                                                            error and the FlsQspiDeviceID.
                                                        </p></html>]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                </a:a>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SCOPE" value="LOCAL"/>  
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                                <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d38bd6eda"/>
                                                <a:a name="OPTIONAL" value="true"/>
                                                <a:da name="EDITABLE" value="true"/>
                                                <a:da name="REF" value="ASPathDataOfSchema:/TS_T40D2M10I2R0/Fls/FlsConfigSet/FlsExternalDriver/FlsHwUnit/FlsLUT"/>  
                                                <a:da name="RANGE" type="XPath">
                                                    <a:tst expr="node:paths(../../FlsLUT/*)"/>
                                                </a:da>
                                                <a:da name="INVALID" type="XPath">
                                                    <a:tst expr="node:refvalid(.)" 
                                                            false="The configured node does not exist or may not be referenced."/>
                                                    <a:tst expr="node:fallback( ../../FlsQspiDeviceId, 0 )!=0" 
                                                            false="The configured FlsQspiDeviceId is 0. When the device id check is enabled, to function properly, a value different than 0 
                                                                    should be configured or this parameter has to be disabled."/>
                                                    <a:tst expr="(node:fallback( ., 0 ) != node:fallback( ../FlsLUTReadSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTWriteSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTEraseSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTGetStatusSequenceIdRef, 0 )) and
                                                                 (node:fallback( ., 0 ) != node:fallback( ../FlsLUTWriteEnableSequenceIdRef, 0 ))" 
                                                            false="Same LUT sequence is configured for two different hardware operations. Choose a different LUT sequence reference."/>
                                                </a:da>
                                            </v:ref><!-- FlsLUTReadIdSequenceIdRef -->
                                        
                                        </v:ctr><!-- FlsQspiLutSeqIdRefs -->
                                        
                                        <!-- FlsLUT -->
                                        <v:lst name="FlsLUT" type="MAP">
                                            <a:da name="MIN" value="0"/>
                                            <a:da name="MAX" value="16"/>
                                            <v:ctr name="FlsLUT" type="IDENTIFIABLE">
                                                <a:a name="LABEL" value="Fls LUT" />
                                                <a:a name="DESC">
                                                    <a:v>
                                                        <![CDATA[EN:<html><p>
                                                            Container for the configuration of the Look Up Table holding all the Instruction/Operands sequences.<br />
                                                            A sequence consists of a series of up to 8 instruction/operands pairs, which can ocupy up to 4 LUTs,
                                                            which are executed whenever a command is triggered to the external flash memory.
                                                        </p></html>]]>
                                                    </a:v>
                                                </a:a>                                       
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ed4"/>
                                                <a:da name="EDITABLE" value="true"/>

                                                <!-- FlsLUTIndex -->  
                                                <v:var name="FlsLUTIndex" type="INTEGER">
                                                    <a:a name="LABEL" value="Fls LUT Index" />
                                                    <a:a name="DESC">
                                                      <a:v>
                                                      <![CDATA[EN:<html><p>
                                                        Vendor specific: Fls LUT Index is an invariant index, used to order the LUT entries and loop 
                                                        over them in the correct, configured order. Its value should be equal with the position of the 
                                                        configured LUT inside the configured LUT list (the same value as the shown index).<br />
                                                        Rationale: The generated .epc configuration might reorder the LUT elements (alphabetically), thus the default index parameter
                                                        changes, becoming out of sync with the real intended order (the values are not generated in the intended order, they are sorted).<br />
                                                        Range:<br />
                                                        <strong>min</strong> = 0<br />
                                                        <strong>max</strong> = 65534<br />
                                                        </p></html>]]>
                                                        </a:v>                   
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SCOPE" value="LOCAL"/>                        
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:582f386b-55db-4923-bb69-ad668299fb9f"/>
                                                    <a:da name="DEFAULT" type="XPath">
                                                        <a:tst expr="num:i(node:fallback(../@index, 0))"/>
                                                    </a:da>
                                                    <a:da name="RANGE" type="XPath">
                                                        <a:tst expr="text:uniq(text:split(node:fallback(../../*/FlsLUTIndex, 1)), node:fallback(., 1))" 
                                                               false="This FlsLUTIndex is already in use. The FlsLUTIndex must be unique."/>    
                                                        <a:tst expr="(  node:fallback( ../FlsLUTIndex, 0 ) != 0 and 
                                                                        node:fallback(../../*[FlsLUTIndex = (node:current()/../FlsLUTIndex - 1)],0) != 0
                                                                     )" 
                                                           true="Invalid FlsLUTIndex value, the values of FlsLUTIndex must be consecutive, with no gaps. Hit the calc button to calculate correct value."/>  
                                                    </a:da>
                                                    <a:da name="INVALID" type="Range">
                                                      <a:tst expr="&lt;=65534"/>
                                                      <a:tst expr="&gt;=0"/>
                                                    </a:da>
                                                </v:var><!-- FlsLUTIndex -->
                                                
                                                <!-- FlsInstructionOperandPair -->
                                                <v:lst name="FlsInstructionOperandPair" type="MAP">
                                                    <a:da name="MIN" value="1"/>
                                                    <a:da name="MAX" value="8"/>
                                                
                                                    <!-- FlsInstructionOperandPair -->
                                                    <v:ctr name="FlsInstructionOperandPair" type="IDENTIFIABLE">
                                                        <a:a name="LABEL" value="Fls Instruction Operand Pair" />
                                                        <a:a name="DESC">
                                                            <a:v>
                                                                <![CDATA[EN:<html><p>
                                                                    One command set which holds one memory command-operand pair.<br />
                                                                </p></html>]]>
                                                            </a:v>
                                                        </a:a>                                       
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ed8"/>
                                                
                                                        <!-- FlsInstrOperPairIndex -->  
                                                        <v:var name="FlsInstrOperPairIndex" type="INTEGER">
                                                            <a:a name="LABEL" value="Fls Instruction Operand Pair Index" />
                                                            <a:a name="DESC">
                                                              <a:v>
                                                              <![CDATA[EN:<html><p>
                                                                Vendor specific: Fls Instruction Operand Pair Index is an invariant index, used to order the Instr.Oper. entries and loop 
                                                                over them in the correct, configured order. Its value should be equal with the position of the 
                                                                configured pair inside the configured pair list (the same value as the shown index).<br />
                                                                Rationale: The generated .epc configuration might reorder the instr.oper. pairs (alphabetically), thus the index parameter
                                                                changes, becoming out of sync with the real intended order (the values are not generated in the intended order, they are sorted).<br />
                                                                Range:<br />
                                                                <strong>min</strong> = 0<br />
                                                                <strong>max</strong> = 65534<br />
                                                                </p></html>]]>
                                                                </a:v>                   
                                                            </a:a>
                                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                            </a:a>
                                                            <a:a name="ORIGIN" value="NXP"/>
                                                            <a:a name="SCOPE" value="LOCAL"/>           
                                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                            <a:a name="UUID" value="ECUC:582f386b-55db-4923-bb69-ad658299fb9f"/>
                                                            <a:da name="DEFAULT" type="XPath">
                                                                <a:tst expr="num:i(node:fallback(../@index, 0))"/>
                                                            </a:da>
                                                            <a:da name="RANGE" type="XPath">
                                                                <a:tst expr="text:uniq(text:split(node:fallback(../../*/FlsInstrOperPairIndex, 1)), node:fallback(., 1))" 
                                                                       false="This Instr.Oper. pair ID is already in use. The Instr.Oper. pair ID must be unique."/>    
                                                                <a:tst expr="(  node:fallback( ../FlsInstrOperPairIndex, 0 ) != 0 and 
                                                                                node:fallback(../../*[FlsInstrOperPairIndex = (node:current()/../FlsInstrOperPairIndex - 1)],0) != 0
                                                                             )" 
                                                                   true="Invalid FlsInstrOperPairIndex value, the values of Instr.Oper. pairs must be consecutive, with no gaps. Hit the calc button to calculate correct value."/> 
                                                            </a:da>
                                                            <a:da name="INVALID" type="Range">
                                                              <a:tst expr="&lt;=65534"/>
                                                              <a:tst expr="&gt;=0"/>
                                                            </a:da>
                                                        </v:var><!-- FlsInstrOperPairIndex -->
                                                
                                                        <!-- FlsLUTInstruction -->
                                                        <v:var name="FlsLUTInstruction" type="ENUMERATION">
                                                            <a:a name="LABEL" value="Fls LUT Instruction" />
                                                            <a:a name="DESC">
                                                                <a:v>
                                                                    <![CDATA[EN:<html><p>
                                                                        The instruction type used to identify the command used by the QSPI IP when
                                                                        sending the command to the memory.<br />
                                                                    </p></html>]]>
                                                                </a:v>
                                                            </a:a>
                                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                            </a:a>
                                                            <a:a name="ORIGIN" value="NXP"/>
                                                            <a:a name="SCOPE" value="LOCAL"/>  
                                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ed5"/>
                                                            <a:da name="DEFAULT">
                                                                <a:v>FLS_LUT_INSTR_CMD</a:v>
                                                            </a:da>
                                                            <a:da name="RANGE">
                                                                <a:v>FLS_LUT_INSTR_CMD</a:v>
                                                                <a:v>FLS_LUT_INSTR_ADDR</a:v>
                                                                <a:v>FLS_LUT_INSTR_DUMMY</a:v>
                                                                <a:v>FLS_LUT_INSTR_MODE</a:v>
                                                                <a:v>FLS_LUT_INSTR_MODE2</a:v>
                                                                <a:v>FLS_LUT_INSTR_MODE4</a:v>
                                                                <a:v>FLS_LUT_INSTR_READ</a:v>
                                                                <a:v>FLS_LUT_INSTR_WRITE</a:v>
                                                                <a:v>FLS_LUT_INSTR_JMP_ON_CS</a:v>
                                                                <a:v>FLS_LUT_INSTR_ADDR_DDR</a:v>
                                                                <a:v>FLS_LUT_INSTR_MODE_DDR</a:v>
                                                                <a:v>FLS_LUT_INSTR_MODE2_DDR</a:v>
                                                                <a:v>FLS_LUT_INSTR_MODE4_DDR</a:v>
                                                                <a:v>FLS_LUT_INSTR_READ_DDR</a:v>
                                                                <a:v>FLS_LUT_INSTR_WRITE_DDR</a:v>
                                                                <a:v>FLS_LUT_INSTR_DATA_LEARN</a:v>
                                                                <a:v>FLS_LUT_INSTR_CMD_DDR</a:v>
                                                                <a:v>FLS_LUT_INSTR_CADDR</a:v>
                                                                <a:v>FLS_LUT_INSTR_CADDR_DDR</a:v>
                                                                <a:v>FLS_LUT_INSTR_STOP</a:v>
                                                            </a:da>
                                                        </v:var><!-- FlsLUTInstruction0 -->
                                                        
                                                        <!-- FlsLUTPad -->
                                                        <v:var name="FlsLUTPad" type="ENUMERATION">
                                                            <a:a name="LABEL" value="Fls LUT Pad" />
                                                            <a:a name="DESC">
                                                                <a:v>
                                                                    <![CDATA[EN:<html><p>
                                                                        Number of pads/pins used for the current command.<br />
                                                                    </p></html>]]>
                                                                </a:v>
                                                            </a:a>
                                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                            </a:a>
                                                            <a:a name="ORIGIN" value="NXP"/>
                                                            <a:a name="SCOPE" value="LOCAL"/>
                                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ed6"/>
                                                            <a:da name="DEFAULT">
                                                                <a:v>FLS_LUT_PAD_1_PAD</a:v>
                                                            </a:da>
                                                            <a:da name="RANGE">
                                                                <a:v>FLS_LUT_PAD_1_PAD</a:v>
                                                                <a:v>FLS_LUT_PAD_2_PADS</a:v>
                                                                <a:v>FLS_LUT_PAD_4_PADS</a:v>
                                                                <a:v>FLS_LUT_PAD_8_PADS</a:v>
                                                            </a:da>
                                                        </v:var><!-- FlsLUTPad -->
                                                        
                                                        <!-- FlsLUTOperand -->
                                                        <v:var name="FlsLUTOperand" type="INTEGER">
                                                            <a:a name="LABEL" value="Fls LUT Operand" />
                                                            <a:a name="DESC">
                                                                <a:v>
                                                                    <![CDATA[EN:<html><p>
                                                                        The operand of the instruction command sent to memory.<br />
                                                                    </p></html>]]>
                                                                </a:v>
                                                            </a:a>
                                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                            </a:a>
                                                            <a:a name="ORIGIN" value="NXP"/>
                                                            <a:a name="SCOPE" value="LOCAL"/>
                                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ed7"/>
                                                            <a:da name="DEFAULT" value="0"/>  
                                                            <a:a name="DEFAULT_RADIX" value="HEX" />
                                                            <a:a name="INVALID" type="Range">
                                                                <a:tst expr="&gt;=0x00"/>
                                                                <a:tst expr="&lt;=0xFF"/>
                                                            </a:a>
                                                        </v:var><!-- FlsLUTOperand --> 
                                                        
                                                    </v:ctr><!-- FlsInstructionOperandPair -->
                                                    
                                                </v:lst><!-- FlsInstructionOperandPair -->                                                
                                                                                                             
                                            </v:ctr> <!-- FlsLUT -->                                            
                                        </v:lst><!-- FlsLUT -->
                                        
                                        <!-- FlsExtUnitRegWidth -->
                                        <v:var name="FlsExtUnitRegWidth" type="INTEGER">
                                            <a:a name="LABEL" value="Fls External Unit Register Width"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        The external memory unit register width, expressed in bytes (For example the width of the Status register). <br />
                                                        1 - External unit register width is 1 byte (8bits).<br />
                                                        2 - External unit register width is 2 byte (16bits).<br />
                                                        3 - External unit register width is 3 byte (24bits).<br />
                                                        4 - External unit register width is 4 byte (32bits).<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:092f89a8-7007-41cb-8ab3-3b5c02afb02c"/>
                                            <a:da name="DEFAULT" value="1"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=4"  false="The external memory unit register width, can be in the range 1-4 bytes(8-32 bits)."/>
                                                <a:tst expr="&gt;=1"  false="The external memory unit register width, can be in the range 1-4 bytes(8-32 bits)."/>
                                            </a:da>
                                        </v:var><!-- FlsExtUnitRegWidth -->
                                        
                                        <!-- FlsBusyBitValue -->
                                        <v:var name="FlsBusyBitValue" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Busy Bit Value"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        The busy bit flag value, from the external device status register, 
                                                        corresponding to the BUSY state.<br />
                                                        0 - Busy flag in status register is 0 when flash devices are busy.<br />
                                                        1 - Busy flag in status register is 1 when flash devices are busy.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/> 
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:092f89a8-7007-41cb-8ab3-3b5c02efb02c"/>
                                            <a:da name="DEFAULT" value="1"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=1"  false="The busy bit value, in status register, can be either 1 or 0."/>
                                                <a:tst expr="&gt;=0"  false="The busy bit value, in status register, can be either 1 or 0."/>
                                            </a:da>
                                        </v:var><!-- FlsBusyBitValue -->
                                        
                                        <!-- FlsBusyBitPositionOffset -->
                                        <v:var name="FlsBusyBitPositionOffset" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Busy Bit Position Offset"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        The busy bit flag position offset, inside the status register of 
                                                        the external device status register.<br />
                                                        Valid range: 0 - 31, for a 32 bits status register. If the width of the status 
                                                        register si smaller, the range is restricted accordingly.<br />
                                                        Ex: 3 - Busy bit flag is bit number 3 in the status register.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>   
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:092f89a8-7007-41cb-8ab3-3b5c02efb02d"/>
                                            <a:da name="DEFAULT" value="0"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=31"  false="The busy bit position offset inside the status register can take a value in the range 0-31, corresponding to a 32 bits register."/>
                                                <a:tst expr="&gt;=0"   false="The busy bit position offset inside the status register can take a value in the range 0-31, corresponding to a 32 bits register."/>
                                            </a:da>
                                        </v:var><!-- FlsBusyBitPositionOffset -->
                                        
                                        <!-- FlsQspiDeviceId -->
                                        <v:var name="FlsQspiDeviceId" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Qspi Device Id"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        External memory ID. If the associated "FLS_E_UNEXPECTED_FLASH_ID" error is enabled, at Init, 
                                                        the configured value is checked against the value read from memory.<br />
                                                        The memory ID is read from the memory using the configured READ_ID LUT sequence. <br />
                                                        Example for a Macronix device:<br />
                                                        Configured value of FlsQspiDeviceId = 0x16C2, meaning Manufacturer ID: 0xC2, Device ID: 0x16.<br />
                                                        The configured READ_ID LUT sequence schedules a read id command(ex:REMS 0x90) with read length 2 bytes.<br />
                                                        Note: The read ID command is sent only to the device attached to QSPI_x_A1 device.<br />
                                                        Note: This parameter can be configured only when FlsLUTReadIdSequenceIdRef reference is enabled.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a> 
                                            <a:a name="DEFAULT_RADIX" value="HEX" />
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/> 
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:092f89a8-7007-41cb-8ab3-3b0c02efb02d"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="( (not(node:empty(node:fallback(../FlsQspiLutSeqIdRefs/FlsLUTReadIdSequenceIdRef,0)))) )"/>
                                            </a:da>
                                            <a:da name="DEFAULT" value="0"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=65535"   false="The external memory ID has to fit in a 16 bit range."/>
                                                <a:tst expr="&gt;=0"       false="The external memory ID has to fit in a 16 bit range."/>
                                            </a:da>
                                        </v:var><!-- FlsQspiDeviceId -->
                                       
                                        
                                    </v:ctr><!-- FlsHwUnit -->
                                </v:lst> <!-- FlsHwUnit -->                                                                                                
                                
                            </v:ctr> <!-- <v:ctr name="FlsExternalDriver" type="IDENTIFIABLE"> -->
                            
                            <!-- @implements FlsSectorList_Object --> 
                            <v:ctr name="FlsSectorList" type="IDENTIFIABLE">
                                <a:a name="LABEL" value="Fls SectorList"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            List of flashable sectors and pages. 
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="UUID" value="ECUC:c7525242-deac-4777-bef8-4c2672af382e"/>
                            
                                <!-- @implements FlsSector_Object -->
                                <v:lst name="FlsSector" type="MAP">
                                    <a:da name="MIN" value="1"/>
                                    
                                    <v:ctr name="FlsSector" type="IDENTIFIABLE">
                                        <a:a name="LABEL" value="Fls Sector"/>
                                        <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html><p>
                                                    Configuration description of a flashable sector 
                                                </p></html>]]>
                                            </a:v>
                                        </a:a>                                        
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                        </a:a>
                                        <a:a name="UUID" value="ECUC:456d6d1f-3e59-4e2c-8c84-03f647a5db62"/>
                                        
                                     <!-- FlsSectorIndex -->  
                                        <v:var name="FlsSectorIndex" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Sector Index" />
                                            <a:a name="DESC">
                                              <a:v>
                                              <![CDATA[EN:<html><p>
                                                Vendor specific: Fls Sector Index is an invariant index, used to order flash sectors and loop 
                                                over them in the correct, configured order. Its value should be equal with the position of the 
                                                configured sector inside the configured sector list (the same value as the shown index).<br />
                                                Rationale: The generated .epc configuration might reorder the flash sectors(alphabetically), thus the index parameter
                                                changes, becoming out of sync with the real intended order (for example: Fls Sector Start Addresses).<br />
                                                Range:<br />
                                                <strong>min</strong> = 0<br />
                                                <strong>max</strong> = 65534<br />
                                                </p></html>]]>
                                                </a:v>                   
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>                        
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:582f386b-55db-4923-bb69-ad658099fb9f"/>
                                            <a:da name="DEFAULT" type="XPath">
                                                <a:tst expr="num:i(node:fallback(../@index, 0))"/>
                                            </a:da>
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="text:uniq(text:split(node:fallback(../../*/FlsSectorIndex, 1)), node:fallback(., 1))" 
                                                       false="This sector ID is already in use. The sector ID must be unique."/>    
                                                <a:tst expr="(  node:fallback( ../FlsSectorIndex, 0 ) != 0 and 
                                                                node:fallback(../../*[FlsSectorIndex = (node:current()/../FlsSectorIndex - 1)],0) != 0
                                                             )" 
                                                   true="Invalid Fls Sector Index value, the values of sector index must be consecutive, with no gaps. Hit the calc button to calculate correct value."/>  
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                              <a:tst expr="&lt;=65534"/>
                                              <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>
                                        
                                        <!-- @implements FlsPhysicalSectorUnlock_Object -->     
                                        <v:var name="FlsPhysicalSectorUnlock" type="BOOLEAN">
                                            <a:a name="LABEL" value="Fls Physical Sector Unlock"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Vendor specific: Fls_Init ensures unlock modify operation for this Flash Physical Sector, it is not possible to lock until a new reset.
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>                                    
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:06857f7f-bc96-460e-affc-fa689d4fe07f"/>
                                            <a:da name="DEFAULT" value="true"/>
                                        </v:var>
                                        
                                        <!-- @implements FlsPhysicalSector_Object -->
                                        <v:var name="FlsPhysicalSector" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Physical Sector"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN: <html><p> 
                                                        Vendor specific: Physical flash device sector.
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>                                    
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:60cc09d6-2b52-4a93-a8ba-65be340ddbcb"/>
                                            <a:da name="DEFAULT" type="XPath" expr="text:split(text:replaceAll(concat(' ',text:join(ecu:list('Fls.Sector.Physical.List'))),' [0-9a-fA-F]+_',' '))[position()-1 = node:fallback(node:current()/../@index, '0')]"/>
                                            <a:da name="INVALID" type="XPath">
                                            <a:tst expr="not(text:uniq(../../*/FlsPhysicalSector,.)) and not(text:contains(string(node:fallback( ../FlsPhysicalSector,'')),'FLS_EXT'))" true="This internal physical sector is already in use."/>
                                            </a:da>
                                            <a:da name="RANGE" type="XPath" expr="text:split(text:replaceAll(concat(' ',text:join(ecu:list(&apos;Fls.Sector.Physical.List&apos;))),' [0-9a-fA-F]+_',' '))"/>
                                        </v:var>
                                        
                                        <v:var name="FlsPhysicalSectorSize" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Physical Sector Size"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Size of this physic sector. <br>Implementation Type: Fls_LengthType.<p/>
                                                        <b>Note</b>: Size of the sector should be a multiple of the page size. <p/>
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:7b8d826c-223c-44e0-a709-b881745c0f24"/>
                                            <a:da name="DEFAULT" type="XPath"
                                                expr="num:hextoint(
                                                        substring-before(
                                                            text:grep(
                                                                ecu:list('Fls.Sector.Physical.List'),
                                                                concat('^[0-9a-zA-Z]+_', node:fallback(../FlsPhysicalSector, substring-after(ecu:list('Fls.Sector.Physical.List')[1], '_')),'.*')
                                                            )[1],
                                                            '_'
                                                            )
                                                    )"/>
                                            <!-- For internal flash sectors, compare the size against the one from the resource list.
                                                 If the sector is external, skip the size check and return always 'true'.
                                                 A virtual external sector with a size 1000 is added in order to avoid parsing errors.-->
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="node:fallback(.,32) != 0" false="Size of this sector shall not be 0."/>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=4294967295"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>
                                        <v:var name="FlsNumberOfSectors" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Number Of Sector"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Number of continuous sectors with the above characteristics.<br>Note:<br>Not supported by the driver.
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:12e0e8dc-1108-4ec0-ab83-1a9eda8e6365"/>
                                            <a:da name="DEFAULT" value="1"/>
                                            <a:da name="INVALID" type="XPath">
                                            <a:tst expr="(text:contains(node:value(node:fallback( ../FlsPhysicalSector,'')),'FLS_EXT_') != 'true') and (node:value(.) != '1')"
                                                   true="For Internal sector this value should be 1"/>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=65535"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>
                                        
                                        <!-- @implements FlsPageSize_Object -->                         
                                        <v:var name="FlsPageSize" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Page Size"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Size of one page of this sector. Implementation Type: Fls_LengthType.
                                                        <ul>
                                                            <li>For internal flash, page size is 8 byte</li>
                                                            <li>For external flash, page size is chip specific.</li>
                                                        </ul>
                                                        <b>Note</b>: For external QSPI flash, the hardware IP requires a minimum size of 16 bytes for each write operations.</br>
                                                                     The page size for external sectors must be configured to an integer multiple of 16 bytes.
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>                      
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:0d351455-0b9a-46b4-8c36-0d4ed6395412"/>
                                            <a:da name="DEFAULT" type="XPath" expr="num:i(node:when(not(text:match(node:fallback(../FlsPhysicalSector, 'None'),'[E][X][T]')),8,16))"/>
                                            <a:a name="INVALID" type="Range">
                                                <a:tst expr="&gt;=0"/>
                                                <a:tst expr="&lt;=4294967295"/>
                                            </a:a>
                                        </v:var>
                                        
                                        <!-- @implements FlsSectorSize_Object --> 
                                        <v:var name="FlsSectorSize" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Sector Size"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p> 
                                                        Size of this sector. <br>Implementation Type: Fls_LengthType.<p/>
                                                        <b>Note</b>: Size of the sector should be a multiple of the page size. <p/>
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>                      
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:9ca79096-5b49-4258-a996-3aa74596737f"/>
                                            <a:da name="DEFAULT" type="XPath" 
                                                expr="num:integer(node:fallback(../FlsPhysicalSectorSize,0)* node:fallback(../FlsNumberOfSectors,0))"/>
                                            <!-- For internal flash sectors, compare the size against the one from the resource list. 
                                                 If the sector is external, skip the size check and return always 'true'.
                                                 A virtual external sector with a size 1000 is added in order to avoid parsing errors.-->
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="num:integer( node:fallback(../FlsPhysicalSectorSize,0)* node:fallback(../FlsNumberOfSectors,0)) = node:value(.)"
                                                       false="FlsSectorSize must be multiple of FlsPhysicalSectorSize and FlsNumberOfSectors. Hit the calc button to calculate correct value."/>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=4294967295"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>
                                        
                                        <!-- @implements FlsSectorStartaddress_Object --> 
                                        <v:var name="FlsSectorStartaddress" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Sector Start Address"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p> 
                                                        Start address of this sector.<br>
                                                        Implementation Type: Fls_AddressType.
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>                      
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:1401e8ff-f239-441e-858e-6f278e8b66c8"/>
                                            <a:da name="DEFAULT" type="XPath" 
                                                  expr="num:integer(
                                                            node:fallback(../../*[FlsSectorIndex = (node:current()/../FlsSectorIndex - 1)]/FlsSectorSize,0) + 
                                                            node:fallback(../../*[FlsSectorIndex = (node:current()/../FlsSectorIndex - 1)]/FlsSectorStartaddress,0)
                                                        )"/>
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="text:uniq(text:split(node:fallback(../../*/FlsSectorStartaddress, 1)), node:fallback(., 1))" 
                                                       false="The Start Address for this sector is duplicated on another sector. The sector Start Addresses must be unique."/>        
                                            </a:da>                               
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=4294967295"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>
                                        
                                        <!--  -->
                                        <v:var name="FlsProgrammingSize" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Programming Size"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN: <html><p> 
                                                        Vendor specific: This is the maximum size which can be used to program Flash memory during one single High voltage operation or external transaction.</br>
                                                        Note: For internal flash sectors, the avaialable values are: FLS_WRITE_DOUBLE_WORD(8bytes), FLS_WRITE_PAGE(32bytes), FLS_WRITE_QUAD_PAGE(128bytes), etc, depending on hardware availability.</br>
                                                        Note: For external flash sectors, the avaialable values are: FLS_WRITE_128BYTES_PAGE(128bytes), FLS_WRITE_256BYTES_PAGE(256bytes), FLS_WRITE_512BYTES_PAGE(512bytes), etc, depending on hardware availability.</br>
                                                        For the external flash sectors, this value should be correlated with the memory internal buffer size and alignement restrictions.
                                                        Internally, the flash driver will use this value to check the alignement boundaries, in order to avoid the memory buffer wrap-arround.</br>
                                                        This parameter setting will not override or increase the MaxWrite parameters in terms of maximum programming size per MainFunction iteration, 
                                                        it will just check the alignement and maximum size per hardware transaction.</br>
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>                                    
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:54b649bb-c481-45c3-b25d-998a7c654d1d"/>
                                            <a:da name="DEFAULT" type="XPath" 
                                                    expr="node:when( text:contains(string(node:fallback( ../FlsPhysicalSector,'')),'FLS_CH_QSPI'),
                                                                text:split(text:replaceAll(concat(' ',text:join(ecu:list('Fls.Sector.Program.List'))),' [0-9a-fA-F]+_',' '))[last()],
                                                                text:split(text:replaceAll(concat(' ',text:join(ecu:list('Fls.Sector.Program.List'))),' [0-9a-fA-F]+_',' '))[position() = 1] )"/>
                                            <a:da name="RANGE" type="XPath" expr="text:split(text:replaceAll(concat(' ',text:join(ecu:list(&apos;Fls.Sector.Program.List&apos;))),' [0-9a-fA-F]+_',' '))"/>
                                            <a:da name="INVALID" type="XPath">                              
                                                <a:tst expr="text:contains(string(node:fallback( ../FlsPhysicalSector,'')),'FLS_EXT') and 
                                                                ( (node:fallback( ., ' ')!='FLS_WRITE_128BYTES_PAGE') and 
                                                                  (node:fallback( ., ' ')!='FLS_WRITE_256BYTES_PAGE') and  
                                                                  (node:fallback( ., ' ')!='FLS_WRITE_512BYTES_PAGE')  
                                                                )" 
                                                       true="External QSPI sector has a programming size set to a different value than FLS_WRITE_128BYTES_PAGE or FLS_WRITE_256BYTES_PAGE or FLS_WRITE_512BYTES_PAGE."/>  
                                                <a:tst expr="not(text:contains(string(node:fallback( ../FlsPhysicalSector,'')),'FLS_EXT')) and 
                                                                ( (node:fallback( ., ' ')='FLS_WRITE_128BYTES_PAGE') or
                                                                  (node:fallback( ., ' ')='FLS_WRITE_256BYTES_PAGE') or  
                                                                  (node:fallback( ., ' ')='FLS_WRITE_512BYTES_PAGE')  
                                                                )" 
                                                       true="Internal flash sector has a programming size set to FLS_WRITE_128BYTES_PAGEor FLS_WRITE_256BYTES_PAGE or FLS_WRITE_512BYTES_PAGE, which is not allowed for this type of internal flash sector."/>   
                                            </a:da>  
                                        </v:var>
                                        
                                        <!-- @implements FlsSectorEraseAsynch_object -->
                                        <v:var name="FlsSectorEraseAsynch" type="BOOLEAN">
                                            <a:a name="LABEL" value="Fls Sector Erase Asynch"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Vendor specific: Enable asynchronous execution of the erase job in the Fls_MainFunction function which doesn't wait (block) 
                                                        for completion of the sector erase operation. The flash driver doesn't use the erase access code to the erase flash sector 
                                                        in asynchronous mode so it can be used only on flash sectors which belong to flash array different from flash array the 
                                                        application is executing from.<br />
                                                        Note: If both FlsSectorEraseAsynch and FlsSectorIrqMode flags are set, the Async flag has priority and the sector is erased
                                                        in normal, asynchronous context, not in interrupt context. <br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>                          
                                            <a:a name="UUID" value="ECUC:575d8688-e7c8-494b-8db5-eaed7c02f365"/>
                                            <a:da name="DEFAULT" value="false"/>
                                        </v:var>
                                        
                                        <!-- @implements FlsPageWriteAsynch_Object -->
                                        <v:var name="FlsPageWriteAsynch" type="BOOLEAN">
                                            <a:a name="LABEL" value="Fls Page Write Asynch"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Vendor specific: Enable asynchronous execution of the write job in the Fls_MainFunction function which doesn't wait (block) 
                                                        for completion of the page write operation(s). The flash driver doesn't use the write access code to the write flash page(s) 
                                                        in asynchronous mode so it can be used only on flash sectors which belong to flash array different from flash array the 
                                                        application is executing from.<br />
                                                        Note: If both FlsPageWriteAsynch and FlsSectorIrqMode flags are set, the Async flag has priority and the sector is written
                                                        in normal, asynchronous context, not in interrupt context. <br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:46ed2647-72d1-42be-a2f3-d796c6230b88"/>
                                            <a:da name="DEFAULT" value="false"/>
                                        </v:var>  
                                        
                                        <!-- FlsSectorIrqMode -->
                                        <v:var name="FlsSectorIrqMode" type="BOOLEAN">
                                            <a:a name="LABEL" value="Fls Sector Interrupt Mode"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        Vendor specific: Enable the flash jobs associated with this sector to be executed in interrupt context.<br />
                                                        This option applies for all type of jobs: read, write, erase.<br />
                                                        This option applies only for the sectors on which there is hardware support. For example, if a sector is
                                                        assigned on the internal flash hardware channel, there might not be any interrupt capability avaialable.<br />
                                                        Note: Flash driver support to execute Sector Erase/Page Write job in either Asynch mode or Interrupt mode <br />                                                        
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:46ed2647-72d1-42be-a2f3-d796c6230b89"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:da name="EDITABLE" type="XPath" expr="(node:fallback(node:fallback(../../../../../FlsGeneral/FlsUseInterrupts,0),' ')='true') and (ecu:has('Fls.External.Qspi.Available') and ecu:get('Fls.External.Qspi.Available')='STD_ON')"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="text:contains(string(node:fallback( ../FlsHwCh,'')),'INTERN') and (node:fallback( ., ' ')='true')" 
                                                       true="The IRQ mode cannot be enabled for an internal flash sector, which does not support interrupt processing mode."/>
                                                <a:tst expr="(node:value(../../../../../FlsGeneral/FlsUseInterrupts) ='false') and (node:value(.) = 'true')" 
                                                       true="The sector IRQ mode is enabled while FlsUseInterrupts is disabled. Enable both of FlsUseInterrupts and FlsSectorIrqMode to excute flash jobs in interrupt mode"/>
                                                <a:tst expr="(node:value(../FlsSectorEraseAsynch) ='true') and (node:value(.) = 'true')" 
                                                       true="Flash Sector Erase job will be executed in either Asynch mode or Interrupt mode only"/>
                                                <a:tst expr="(node:value(../FlsPageWriteAsynch) ='true') and (node:value(.) = 'true')" 
                                                       true="Flash Page Write job will be executed in either Asynch mode or Interrupt mode"/> 
                                            </a:da> 
                                        </v:var><!-- FlsSectorIrqMode -->  
                                        
                                        <!-- FlsHwCh -->
                                        <v:var name="FlsHwCh" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Hardware Channel" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        The hardware channel type of the current sector: internal flash or external QSPI flash sector. <br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30bd6ede"/>
                                            <a:da name="DEFAULT" type="XPath" 
                                                  expr="node:when( text:contains(string(node:fallback( ../FlsPhysicalSector,'')),'FLS_CH_QSPI'),
                                                        ecu:list('Fls.HwUnit.Channels')[0],
                                                        'FLS_CH_INTERN' )"/>
                                            <a:da name="INVALID" type="XPath">                                                
                                                <!-- External sectors assigned to external sectors. -->
                                                <a:tst expr="text:contains(string(node:fallback( ../FlsPhysicalSector,'')),'FLS_EXT') and (node:fallback( ., ' ')='FLS_CH_INTERN')" 
                                                       true="External QSPI sector is assigned to FLS_CH_INTERN, instead of an external QSPI channel."/>   
                                                <!-- Internal sectors present but are not assigned to FLS_CH_INTERN as it should. -->
                                                <a:tst expr="not(text:contains(string(node:fallback( ../FlsPhysicalSector,'')),'FLS_EXT')) and (node:fallback( ., ' ')!='FLS_CH_INTERN')" 
                                                       true="Internal sector is not assigned assigned to FLS_CH_INTERN."/>                                                
                                                <!-- External sectors present but no hardware unit configured. -->
                                                <a:tst expr="text:contains(string(node:fallback( ../FlsPhysicalSector,'')),'FLS_CH_QSPI') and (num:i(count(node:fallback(../../../../FlsExternalDriver/FlsHwUnit/*,0))) = 0)" 
                                                       true="An external QSPI sector is configured but no external QSPI HW unit is configured."/>                                                 
                                                
                                                <!-- Internal sectors present but "FlsInternalSectorsConfigured" boolean parameter is not enabled. -->
                                                <a:tst expr="(node:fallback( ., ' ')='FLS_CH_INTERN') and (node:value(../../../../../AutosarExt/FlsInternalSectorsConfigured)='false')" 
                                                       true="An internal flash sector is configured but parameter FlsInternalSectorsConfigured is not enabled."/>
                                                <!-- External sectors present but "FlsExternalSectorsConfigured" boolean parameter is not enabled. -->
                                                <a:tst expr="(node:fallback( ., ' ')='FLS_CH_QSPI') and (node:value(../../../../../AutosarExt/FlsExternalSectorsConfigured)='false')" 
                                                       true="An external flash sector is configured but parameter FlsExternalSectorsConfigured is not enabled."/>                                                
                                            </a:da>  
                                            <a:da name="RANGE" type="XPath" 
                                                  expr="ecu:list('Fls.HwUnit.Channels')"/>
                                        </v:var><!-- FlsHwCh -->
                                        
                                        <!-- FlsQspiSectorCh -->
                                        <v:var name="FlsQspiSectorCh" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fls Qspi Sector Channel" />
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p>
                                                        The QSPI hardware channel, the assigned external chip select for this sector.<br />
                                                        The value of the QSPI channel determines the external QSPI port pins on which all transactions
                                                        targeting this sector will be triggered.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:efc12700-0636-47d6-9c1f-5d3d30ba6ede"/>
                                            <a:da name="DEFAULT" type="XPath" 
                                                  expr="node:when( text:contains(string(node:fallback( ../FlsPhysicalSector,'')),'FLS_EXT_'),
                                                        ecu:list('Fls.Qspi.Channels')[0],
                                                        'NOT_QSPI_CHANNEL' )"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <!-- The FlsQspiSectorCh is editable only if this sector is a QSPI one, it has the FlsHwCh set to FLS_CH_QSPI. -->
                                                <a:tst expr="(node:fallback( ../FlsHwCh,'')='FLS_CH_QSPI')"/>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">                                                
                                                <!-- External QSPI sector channel is assigned to an internal sector. -->
                                                <a:tst expr="text:contains(string(node:fallback( ../FlsHwCh,'')),'FLS_CH_INTERN') and (node:fallback( ., ' ')!='NOT_QSPI_CHANNEL')" 
                                                       true="This is an internal type sector, for which this field does not apply, so it should have the default NOT_QSPI_CHANNEL value."/>                                                 
                                                <!-- Internal sector channel is assigned to an external sector. -->
                                                <a:tst expr="text:contains(string(node:fallback( ../FlsHwCh,'')),'FLS_CH_QSPI') and (node:fallback( ., ' ')='NOT_QSPI_CHANNEL')" 
                                                       true="This is an external QSPI type sector, for which this field does apply, so it should not have the NOT_QSPI_CHANNEL value."/>                                                
                                                <!-- External sectors present but no hardware unit configured. -->
                                                <a:tst expr="text:contains(string(node:fallback( ../FlsPhysicalSector,'')),'FLS_EXT_') and (num:i(count(node:fallback(../../../../FlsExternalDriver/FlsHwUnit/*,0))) = 0)" 
                                                       true="An external sector is configured but no external QSPI HW unit is configured."/>                                                
                                                <!-- External sector assigned to a hardware unit which is not configured. For example, if FlsQspiSectorCh==FLS_CH_EXTERN_QSPI_1_B1, then
                                                     it has to exist a FlsHwUnitName==QSPI_1 configured. -->
                                                <a:tst expr="node:when(node:fallback(../FlsHwCh,'')='FLS_CH_QSPI',text:contains(text:join(node:fallback(../../../../FlsExternalDriver/FlsHwUnit/*/FlsHwUnitName,2)),substring(string(node:fallback( .,'')),15,6)),'true')" 
                                                       false="An external sector is configured and assigned to a hardware unit which is not configured, not present in the FlsHwUnit list."/>
                                                
                                            </a:da>  
                                            <a:da name="RANGE" type="XPath" 
                                                  expr="ecu:list('Fls.Qspi.Channels')"/>
                                        </v:var><!-- FlsQspiSectorCh -->
                                        
                                        <!-- FlsSectorHwAddress --> 
                                        <v:var name="FlsSectorHwAddress" type="INTEGER">
                                            <a:a name="LABEL" value="Fls Sector Hardware Byte Address"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html><p> 
                                                        Hardware address of this sector, as needed by the external flash device (usually starting from 0).<br />
                                                        Applicable only to external sectors. This value is used to access the hardware sector on the attached device
                                                        and will be sent as parameter of flash comands, so it should be completed to meet the requirements of the 
                                                        external flash memory type and configured operating mode.<br />
                                                        Internally, this address is added to the MCU base addresses of each channel, configured in SF{A/B}{1/2}AD registers, in order
                                                        to select the corresponding external device hw channel.<br />
                                                        Example: FlsSectorHwAddress = 0x100 <br />
                                                                 Sector hardware channel = FLS_CH_EXTERN_QSPI_0_A2 <br />
                                                                 FlsSerialFlashA1TopAddr = 0x24000000 <br />
                                                        The address used by the driver internally will be 0x24000100, thus selecting external
                                                        flash device A2 and accessing internal location 0x100 of the memory.<br />
                                                    </p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>    
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>                     
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:1401e8ff-f239-441e-858e-6f278e8b66c9"/>
                                            <a:a name="DEFAULT_RADIX" value="HEX"/>
                                            <a:da name="DEFAULT" value="0"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="( text:contains(string(node:fallback( ../FlsPhysicalSector,'')),'FLS_EXT_') )"/>
                                            </a:da>
                                            <a:a name="INVALID" type="Range">
                                                <a:tst expr="&gt;=0"/>
                                                <a:tst expr="&lt;=4294967295"/>
                                            </a:a>
                                        </v:var><!-- FlsSectorHwAddress --> 
                                        
                                    </v:ctr>
                                  
                                </v:lst>
                                
                            </v:ctr>
                            
                        </v:ctr> 
                        
                        <v:ctr name="AutosarExt" type="IDENTIFIABLE">
                            <a:a name="UUID" value="ECUC:dc9186d3-53e5-45f7-bc95-ece5b2db22ed"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html>
                                            <p>Vendor specific: This container contains the global Non-Autosar configuration parameters of the Fls driver. 
                                               This container is a MultipleConfigurationContainer, i.e. this container and 
                                               its sub-containers exist once per configuration set.</p>
                                        </html>
                                    ]]>
                                </a:v>
                                </a:a>
            <!--                <a:a name="LOWER-MULTIPLICITY" value="1"/>
                                <a:a name="UPPER-MULTIPLICITY" value="1"/>-->
                                <!--  -->
                                <v:var name="FlsDisableDemReportErrorStatus" type="BOOLEAN">
                                    <a:a name="LABEL" value="Fls Disable Production Error Reporting"/>
                                    <a:a name="DESC">
                                    <a:v>
                                      <![CDATA[EN:
                                          <html>
                                              <p>Vendor specific: Switches the Diagnostic Error Reporting and Notification OFF.<br />
                                              Note: This parameter is obsolete as DEM errors will be removed in release 4.3.</p>
                                          </html>
                                      ]]>
                                    </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:fbb4800a-1114-4ef4-9a8b-396beac658cc"/>
                                    <a:da name="DEFAULT" value="false"/>
                                    <a:da name="EDITABLE" value="false"/>
                                </v:var>
                                <v:var name="FlsCheckFlexNvmRatio" type="BOOLEAN">
                                    <a:a name="LABEL" value="Fls Check Flex Nvm Ratio"/>
                                    <a:a name="DESC">
                                    <a:v>
                                    <![CDATA[EN:
                                        <html>
                                            <p>Vendor specific: Switches the FlexNvm partion ratio check ON at initialization.</p>
                                            <p>If check is ON, the driver initialization will fail if FlexNvm is partitioned otherwise than: Data flash only, no EEPROM emulation. </p>
                                        </html>
                                    ]]>
                                    </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:fbb4800a-1114-4ef4-9a8b-396beac658cd"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>
                                <!-- @implements FlsEnableUserModeSupport_Object -->
                                <v:var name="FlsEnableUserModeSupport" type="BOOLEAN">
                                    <a:a name="LABEL" value="Fls Enable User Mode Support"/>
                                    <a:a name="DESC">
                                    <a:v>
                                      <![CDATA[EN:
                                          <html>
                                               <p> When this parameter is enabled, the FLS module will adapt to run from User Mode, with the following measures:</p>
                                                <p>configuring REG_PROT for Fls IPs so that the registers under protection can be accessed from user mode by setting UAA bit in REG_PROT_GCR to 1</p>
                                                <p>for more information and availability on this platform, please see chapter User Mode Support in IM</p>
                                          </html>
                                      ]]>                            
                                    </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:fbb4800a-1114-4ef4-9a8b-396befc654eb"/>
                                    <a:da name="DEFAULT" value="false"/>
                                    <a:da name="EDITABLE" type="XPath" expr="(ecu:has('Fls.UserModeSupport') and ecu:get('Fls.UserModeSupport')='true')"/>
                                </v:var> 
                                
                                <!-- FlsQspiLockLUT -->
                                <v:var name="FlsQspiLockLUT" type="BOOLEAN">
                                    <a:a name="LABEL" value="Fls Qspi Lock LUT"/>
                                    <a:a name="DESC">
                                    <a:v>
                                      <![CDATA[EN:
                                          <html>
                                               </p>Vendor specific parameter: Enable the Lock/Unlock of the LUT for the external QuadSPI memory. </p>                                                
                                               </p>If Enabled, the LUT is unlocked at the beginning of the Init phase and locked at the end of it.</p>                                                
                                               </p>If Disabled, the LUT has to be unlocked if the Init phase is supposed to populate it.</p>                                                
                                          </html>
                                      ]]>                            
                                    </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:fbb4800a-1114-4ef4-9a8b-496befc654eb"/>
                                    <a:da name="DEFAULT" value="false"/>                                  
                                    <a:da name="EDITABLE" type="XPath" expr="(ecu:has('Fls.External.Qspi.Available') and ecu:get('Fls.External.Qspi.Available')='STD_ON')"/>
                                </v:var><!-- FlsQspiLockLUT  -->

                                <!-- FlsSynchronizeCache  -->
                                <v:var name="FlsSynchronizeCache" type="BOOLEAN">
                                    <a:a name="LABEL" value="FlsSynchronizeCache"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html> Vendor specific:
                                                Synchronize the memory by invalidating the cache after each flash hardware operation.<p/>
                                                The FLS driver needs to maintain the memory coherency by means of three methods:<p/>
                                                    1. Disable data cache, or<p/>
                                                    2. Configure the flash region upon which the driver operates, as non-cacheable, or<p/>
                                                    3. Enable the FlsSynchronizeCache feature.<p/>
                                                Depending on the application configuration, one option may be more beneficial than other.<p/>
                                                    
                                                Enabled:    The FLS driver will call Mcl cache API functions in order to invalidate the cache
                                                            after each high voltage operation(write,erase) and before each read operation, in order
                                                            to ensure that the cache and the modified flash memory are in sync.<p/>
                                                            If enabled, the driver will attempt to invalidate only the modified lines from the cache.
                                                            If the size of the region to be invalidated is greater than half of the cache size, then
                                                            the entire cache is invalidated.<p/>
                                                            <b>Note</b>: If enabled, the MclLmemEnableCacheApi parameter has to be enabled and the MCL plugin included as a dependency.<p/>
                                                Disabled:   The upper layers have to ensure that the flash region upon which the driver operates is not cached.
                                                            This can be obtained by either disabling the data cache or by configuring the memory region as non-cacheable.
                                                            
                                                Note: This feature is applicable only if supported on the current platform.<p/>                                    
                                            </html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:fbb4800a-1114-4ef4-9a8b-396beac658c3"/>
                                    <a:da name="DEFAULT" value="false"/>
                                    <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(ecu:get('Fls.SupportSynchronizeCacheFeature') = 'true')"/>
                                    </a:a>
                                    <a:a name="INVALID" type="XPath">
                                        <a:tst expr="((node:value(.) = 'true') and not(node:exists('ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcl/MclGeneral/MclLmem/MclLmemEnableCacheApi')))
                                        or ((node:value(.) = 'true')
                                             and (node:exists('ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcl/MclGeneral/MclLmem/MclLmemEnableCacheApi'))
                                             and (node:value('ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcl/MclGeneral/MclLmem/MclLmemEnableCacheApi') = 'false')
                                           )"
                                        true="If this feature is enabled, the MclLmemEnableCacheApi parameter has to be enabled and the MCL plugin included as a dependency" />
                                    </a:a>
                                </v:var>
                                
                                <!-- FlsInternalSectorsConfigured -->
                                <v:var name="FlsInternalSectorsConfigured" type="BOOLEAN">
                                    <a:a name="LABEL" value="Fls Internal Sectors Configured"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html> Vendor specific:
                                                Boolean parameter which must be enabled if internal flash sectors are configured.<p/>  
                                                <p/>
                                                Enabled: At least one internal flash sector is configured in any variant.<p/>  
                                                <p/>  
                                                Disabled: No internal flash sector is configured in any variant, only external flash sectors are present.<p/>  
                                            </html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:fbb4800a-1114-4ef4-9a8b-396beac658c4"/>
                                    <a:da name="DEFAULT" value="false"/>
                                    <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(ecu:get('Fls.Internal.Flash.Available') = 'STD_ON')"/>
                                    </a:a>
                                </v:var><!-- FlsInternalSectorsConfigured -->
                                
                                <!-- FlsExternalSectorsConfigured -->
                                <v:var name="FlsExternalSectorsConfigured" type="BOOLEAN">
                                    <a:a name="LABEL" value="Fls External Sectors Configured"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html> Vendor specific:
                                                Boolean parameter which must be enabled if external flash sectors are configured.<p/>  
                                                <p/>
                                                Enabled: At least one external flash sector is configured in any variant.<p/>  
                                                <p/>  
                                                Disabled: No external flash sector is configured in any variant, only internal flash sectors are present.<p/>  
                                            </html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:fbb4800a-1114-4ef4-9a8b-396beac658c5"/>
                                    <a:da name="DEFAULT" value="false"/>
                                    <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(ecu:get('Fls.External.Qspi.Available') = 'STD_ON')"/>
                                    </a:a>
                                    <a:da name="INVALID" type="XPath">                                                
                                        <!-- External sectors present but no hardware unit configured. -->
                                        <a:tst expr="(node:value(node:fallback(.,''))='true') and (num:i(count(node:fallback(../../FlsConfigSet/FlsExternalDriver/FlsHwUnit/*,0)))=0)" 
                                               true="FlsExternalSectorsConfigured is enabled, although no external FlsHwUnit is configured or FlsExternalDriver is disabled altogether, meaning
                                                    no external flash sector is in fact configured. If no external flash sector is configured in any variants, than this parameter must be disabled."/>                                                 
                                                                                       
                                    </a:da> 
                                </v:var><!-- FlsExternalSectorsConfigured -->
                                
                        </v:ctr> <!-- <v:ctr name="AutosarExt" type="IDENTIFIABLE"> -->
                        
                        <!-- @implements FlsGeneral_Object -->
                        <v:ctr name="FlsGeneral" type="IDENTIFIABLE">
                            <a:a name="LABEL" value="Fls General"/>
                            <a:a name="DESC">
                                <a:v>
                                <![CDATA[EN:<html><p>
                                      Container for general parameters of the flash driver. These parameters are always pre-compile.
                                </p></html>]]>
                                </a:v>
                            </a:a>                
                            <a:a name="UUID" value="ECUC:1116deb5-59de-4df3-b9ec-7b462fef84d6"/>
                                                      
                            <!-- @implements FlsAcLoadOnJobStart_Object -->
                            <v:var name="FlsAcLoadOnJobStart" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Load Access Code On Job Start"/>
                                <a:a name="DESC">                  
                                    <a:v>
                                        <![CDATA[EN:<html><p> 
                                            The flash driver shall load the flash access code to RAM whenever an erase or write job is started and unload (overwrite) it after that job has been finished or canceled.<br>
                                            true: Flash access code loaded on job start / unloaded on job end  or error.<br>
                                            false:  Flash access code not loaded to / unloaded from RAM at all.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:4cf0f51f-47e2-4aa7-ad0e-fde30e399baa"/>
                                <a:da name="DEFAULT" value="false"/>
                            </v:var>    
                            
                            <v:var name="FlsBaseAddress" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="Fls Base Address"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            The flash memory start address (see also FLS118). <br>
                                            FLS169: This parameter defines the lower boundary for read / write / erase and compare jobs.<br>Note:<br>Not needed / supported by the driver.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:365b10b3-4ded-42ee-b8ec-ca631c20a083"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=4294967295"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                                <a:da name="READONLY" value="true"/>
                            </v:var>
                                            
                            <!-- @implements FlsBlankCheckApi_Object --> 
                            <v:var name="FlsBlankCheckApi" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Blank Check Api"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p> 
                                            Compile switch to enable and disable the Fls_BlankCheck function.<br>
                                            true: API supported / function provided.<br>
                                            false:  API not supported / function not provided
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>                 
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:d5264691-6337-49d3-ab05-b1759c3daecc"/>
                                <a:da name="DEFAULT" value="false"/>
                            </v:var>
                            
                            <!-- @implements FlsCancelApi_Object --> 
                            <v:var name="FlsCancelApi" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Cancel Api"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p> 
                                            Compile switch to enable and disable the Fls_Cancel function.<br>
                                            true: API supported / function provided.<br>
                                            false:  API not supported / function not provided
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:438a9f13-adb7-4b21-a879-f25a5a93a6e5"/>
                                <a:da name="DEFAULT" value="true"/>
                            </v:var>
                            
                            <!-- @implements FlsCompareApi_Object --> 
                            <v:var name="FlsCompareApi" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Compare Api"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p> 
                                            Compile switch to enable and disable the Fls_Compare function.<br>
                                            true: API supported / function provided.<br>
                                            false:  API not supported / function not provided
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:d5264691-6337-49d3-ab05-b1759c3dadbb"/>
                                <a:da name="DEFAULT" value="true"/>
                            </v:var>
                            
                            <!-- @implements FlsDevErrorDetect_Object -->   
                            <v:var name="FlsDevErrorDetect" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Development Error Detect"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p> 
                                            Pre-processor switch to enable and disable development error detection.<br>
                                            true: Development error detection enabled.<br>
                                            false:  Development error detection disabled.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:305e2f7b-2813-46cf-8e3c-ed3aaa076ad8"/>
                                <a:da name="DEFAULT" value="true"/>
                            </v:var>
                            
                            <!-- FlsRuntimeErrorDetect -->   
                            <v:var name="FlsRuntimeErrorDetect" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Runtime Error Detect"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p> 
                                            Vendor specific: Pre-processor switch to enable and disable runtime error detection.<br>
                                            true: Runtime error detection enabled.<br>
                                            false:  Runtime error detection disabled.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:305e2f7b-2813-46cf-8e3c-ed3aaa076ad9"/>
                                <a:da name="DEFAULT" value="true"/>
                            </v:var>
                            <!-- FlsTransientFaultDetect -->   
                            <v:var name="FlsTransientFaultDetect" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Transient Fault Detect"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p> 
                                            Vendor specific: Pre-processor switch to enable and disable transient fault detection.<br>
                                            true: Transient fault detection enabled.<br>
                                            false:  Transient fault detection disabled.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:305e2f7b-2408-46cf-8e3c-ed3aaa076ad9"/>
                                <a:da name="DEFAULT" value="true"/>
                            </v:var>
                            <!-- @implements FlsDriverIndex_Object --> 
                            <v:var name="FlsDriverIndex" type="INTEGER">
                                <a:a name="LABEL" value="Fls Driver Index"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>  Index of the driver, used by FEE. </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="ECU"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                                <a:a name="UUID" value="ECUC:2633d477-2e78-4b9c-857b-c1b450518bd0"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=254"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                            </v:var>
                            
                            <!-- @implements FlsGetJobResultApi_Object --> 
                            <v:var name="FlsGetJobResultApi" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Get Job Result Api"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p> 
                                            Compile switch to enable and disable the Fls_GetJobResult function.<br>
                                            true: API supported / function provided.<br>
                                            false:  API not supported / function not provided
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:7507c0b2-e7ff-462d-9656-480a9bbfbf92"/>
                                <a:da name="DEFAULT" value="true"/>
                            </v:var>
                            
                            <!-- @implements FlsGetStatusApi_Object --> 
                            <v:var name="FlsGetStatusApi" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Get Status Api"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p> 
                                            Compile switch to enable and disable the Fls_GetStatus function.<br>
                                            true: API supported / function provided.<br>
                                            false:  API not supported / function not provided
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:32c33368-6341-405b-9149-3f7d337a87a3"/>
                                <a:da name="DEFAULT" value="true"/>
                            </v:var>
                            
                            <!-- @implements FlsSetModeApi_Object --> 
                            <v:var name="FlsSetModeApi" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Set Mode Api"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p> 
                                            Compile switch to enable and disable the Fls_SetMode function.<br>
                                            true: API supported / function provided.<br>
                                            false:  API not supported / function not provided
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:69fbcad3-9d49-47cc-aab9-5e4b910b3f83"/>
                                <a:da name="DEFAULT" value="true"/>
                            </v:var>
                            
                            <v:var name="FlsTotalSize" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="Fls Total Size"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            The total amount of flash memory in bytes (see also FLS118). FLS170: This parameter in conjunction with FLS_BASE_ADDRESS defines the upper boundary for read / write / erase and compare jobs.<br><br>
                                            <br>Note:<br>Not needed / supported by the driver.
                                            </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:97dc10f9-4ebe-408c-b0f1-dc643ec04f54"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=4294967295"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                                <a:da name="READONLY" value="true"/>
                            </v:var>
                            <!-- @implements FlsUseInterrupts_Object -->
                            <v:var name="FlsUseInterrupts" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Use Interrupts"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Job processing triggered by hardware interrupt. <br>
                                                true: Job processing triggered by interrupt (hardware controlled)<br> 
                                                false: Job processing not triggered by interrupt (software controlled)<br>
                                            Note: Available only on sectors which are assigned to a hardware channel which support interrupt processing.<br>
                                            Note: The interrupt processing mode has to be also enabled individualy per each sector on which IRQ mode is needed.<br>
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:a8bd452c-f261-4dcb-90cd-cd27f4955df2"/>
                                <a:da name="DEFAULT" value="false"/>
                                <a:da name="EDITABLE" type="XPath" expr="(ecu:has('Fls.FlsUseInterrupts') and ecu:get('Fls.FlsUseInterrupts')='true')"/>
                            </v:var>
                            
                            <!-- @implements FlsVersionInfoApi_Object --> 
                            <v:var name="FlsVersionInfoApi" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Version Info Api"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p> 
                                            Pre-processor switch to enable / disable the API to read out the modules version information.<br>
                                            true: Version info API enabled.<br>
                                            false:  Version info API disabled.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:819c12f5-90f9-497b-a40e-bef797de7dad"/>
                                <a:da name="DEFAULT" value="false"/>
                            </v:var>  
                            
                            <v:var name="FlsDsiHandlerApi" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Dsi Handler Api"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Vendor specific: Pre-processor switch to enable / disable the API to report data storage (ECC) errors to the flash driver.<br>
                                            true: Data storage handler API enabled.<br>
                                            false:  Data storage handler API disabled.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:b59d6091-3cfa-4b5b-ae44-5716d36f0a30"/>
                                <a:da name="DEFAULT" value="false"/>
                            </v:var>
                            
                            <!-- @implements FlsEraseVerificationEnabled_Object -->
                            <v:var name="FlsEraseVerificationEnabled" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Erase Verification Enabled"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Vendor specific: Pre-processor switch to enable / disable the erase blank check. After a flash block has been erased, the erase blank check compares the contents of the addressed memory area against the value of an erased flash cell to check that the block has been completely erased.<br>
                                            true: Erase blank check enabled.<br>
                                            false:  Erase blank check disabled.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:e8b8725a-86ad-4e45-abbc-31c8c11ee5e0"/>
                                <a:da name="DEFAULT" value="true"/>
                            </v:var>
                            
                            <!-- @implements FlsWriteVerificationEnabled_Object -->
                            <v:var name="FlsWriteVerificationEnabled" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Write Verification Enabled"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p> 
                                              Vendor specific: Pre-processor switch to enable / disable the write verify check. After writing a flash block, the write verify check compares the contents of the reprogrammed memory area against the contents of the provided application buffer to check that the block has been completely reprogrammed.<br>
                                              true: Write verify check enabled.<br>
                                              false:  Write verify check disabled.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:415ee3e7-b36d-43ae-bc24-f3be0fdb4e54"/>
                                <a:da name="DEFAULT" value="true"/>
                            </v:var>
                            
                            <!-- @implements FlsMaxEraseBlankCheck_Object -->
                            <v:var name="FlsMaxEraseBlankCheck" type="INTEGER">
                                <a:a name="LABEL" value="Fls Max Erase Blank Check"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Vendor specific: The maximum number of bytes to blank check in one cycle of the flash driver&apos;s job processing function. Affects only the flash blocks that have enabled asynchronous execution of the erase job (FlsSectorEraseAsynch=true).
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:092f89a8-7007-41cb-8ab3-2b5c02efb02c"/>
                                <a:da name="DEFAULT" value="256"/>
                                <a:da name="RANGE" type="XPath">
                                    <a:tst expr="node:fallback( ., 8 ) > 0 and node:fallback( ., 8 ) mod 8 = 0" false="Must be greater than zero and integer multiple of the page size."/>
                                </a:da>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=65536"  false="Maximum number of bytes should be &lt;=65536."/>
                                    <a:tst expr="&gt;=8"      false="Minimum number of bytes should be &gt;=8."/>
                                </a:da>
                            </v:var>
                            <!-- @implements FlsTimeoutSupervisionEnabled_Object -->
                            <v:var name="FlsTimeoutSupervisionEnabled" type="BOOLEAN">
                                <a:a name="LABEL" value="Fls Timeout Enabled"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p> 
                                              Vendor specific: Compile switch to enable timeout supervision.<br>
                                              true: timeout supervision for read/erase/write/compare jobs enabled.<br>
                                              false: timeout supervision for read/erase/write/compare jobs disabled.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:415ee3e7-b36d-43ae-bc24-f3be0fdb4e55"/>
                                <a:da name="DEFAULT" value="true"/>
                            </v:var>                            
                              
                                <!-- asynchronous timeouts -->
                                <v:var name="FlsAsyncWriteTimeout" type="INTEGER">
                                    <a:a name="LABEL" value="Fls Async Write Timeout"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[<html><p>
                                                Vendor specific: Fls Async Write Timeout is the timeout value for write operation in asynchronous mode.                        
                                            </p></html>]]>
                                        </a:v>
                                    </a:a> 
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>                   
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:8D905719-6A85-492F-8985-33B88A6E4A04"/>
                                    <a:da name="DEFAULT" value="2147483647"/>
                                    <a:da name="EDITABLE" type="XPath">
                                        <a:tst expr="node:value(../FlsTimeoutSupervisionEnabled) = 'true'"/>
                                    </a:da>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=2147483647"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var>
                                
                                <v:var name="FlsAsyncEraseTimeout" type="INTEGER">
                                    <a:a name="LABEL" value="Fls Async Erase Timeout"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[<html><p>
                                                Vendor specific: Fls Async Erase Timeout is the timeout value for erase operation in asynchronous mode.
                                            </p></html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:6922DE7A-8051-4241-A982-2C66D90C96CF"/>
                                    <a:da name="DEFAULT" value="2147483647"/>
                                    <a:da name="EDITABLE" type="XPath">
                                        <a:tst expr="node:value(../FlsTimeoutSupervisionEnabled) = 'true'"/>
                                    </a:da>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=2147483647"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var>
                                
                                <!-- asynchronous timeouts -->
                                <v:var name="FlsSyncWriteTimeout" type="INTEGER">
                                    <a:a name="LABEL" value="Fls Sync Write Timeout"/>
                                    <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[<html><p>
                                            Vendor specific: Fls Sync Write Timeout is the timeout value for write operation in synchronous mode.
                                        </p></html>]]>
                                    </a:v>
                                    </a:a> 
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:BF0D9C17-55A5-4FBF-BAE9-07A8B91D9C0D"/>
                                    <a:da name="DEFAULT" value="2147483647"/>
                                    <a:da name="EDITABLE" type="XPath">
                                        <a:tst expr="node:value(../FlsTimeoutSupervisionEnabled) = 'true'"/>
                                    </a:da>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=2147483647"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var>
                              
                                <v:var name="FlsSyncEraseTimeout" type="INTEGER">
                                    <a:a name="LABEL" value="Fls Sync Erase Timeout"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[<html><p>
                                                Vendor specific: Fls Sync Erase Timeout is the timeout value for erase operation in synchronous mode.
                                            </p></html>]]>
                                        </a:v>
                                    </a:a>                                    
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:1430C09A-28CD-4B52-828A-2445505ADE49"/>
                                    <a:da name="DEFAULT" value="2147483647"/>
                                    <a:da name="EDITABLE" type="XPath">
                                        <a:tst expr="node:value(../FlsTimeoutSupervisionEnabled) = 'true'"/>
                                    </a:da>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=2147483647"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var>
                            
                                                        <!-- QSPI timeouts -->
                            
                                <!-- FlsQspiSyncReadTimeout -->
                                <v:var name="FlsQspiSyncReadTimeout" type="INTEGER">
                                    <a:a name="LABEL" value="Fls Qspi Sync Read Timeout"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[<html><p>
                                                Vendor specific: Fls Qspi Sync Read Timeout is the timeout value for read operation.
                                            </p></html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:1430C09A-28CD-4B52-828A-2445515ADE49"/>
                                    <a:da name="DEFAULT" value="2147483647"/>
                                    <a:da name="EDITABLE" type="XPath">
                                        <a:tst expr="node:value(../FlsTimeoutSupervisionEnabled) = 'true'"/>
                                    </a:da>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=2147483647"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var><!-- FlsQspiSyncReadTimeout -->
                              
                                <!-- FlsQspiAsyncWriteTimeout -->
                                <v:var name="FlsQspiAsyncWriteTimeout" type="INTEGER">
                                    <a:a name="LABEL" value="Fls Qspi Async Write Timeout"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[<html><p>
                                                Vendor specific: Fls Qspi Async Write Timeout is the timeout value for QSPI write operation in asynchronous mode.
                                            </p></html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:1430C09A-28CD-4B52-828A-2445525ADE49"/>
                                    <a:da name="DEFAULT" value="2147483647"/>
                                    <a:da name="EDITABLE" type="XPath">
                                        <a:tst expr="node:value(../FlsTimeoutSupervisionEnabled) = 'true'"/>
                                    </a:da>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=2147483647"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var><!-- FlsQspiAsyncWriteTimeout -->
                              
                                <!-- FlsQspiAsyncEraseTimeout -->
                                <v:var name="FlsQspiAsyncEraseTimeout" type="INTEGER">
                                    <a:a name="LABEL" value="Fls Qspi Async Erase Timeout"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[<html><p>
                                                Vendor specific: Fls Qspi Async Erase Timeout is the timeout value for QSPI erase operation in asynchronous mode.
                                            </p></html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:1430C09A-28CD-4B52-828A-2445535ADE49"/>
                                    <a:da name="DEFAULT" value="2147483647"/>
                                    <a:da name="EDITABLE" type="XPath">
                                        <a:tst expr="node:value(../FlsTimeoutSupervisionEnabled) = 'true'"/>
                                    </a:da>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=2147483647"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var><!-- FlsQspiAsyncEraseTimeout -->
                              
                                <!-- FlsQspiSyncWriteTimeout -->
                                <v:var name="FlsQspiSyncWriteTimeout" type="INTEGER">
                                    <a:a name="LABEL" value="Fls Qspi Sync Write Timeout"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[<html><p>
                                                Vendor specific: Fls Qspi Sync Write Timeout is the timeout value for QSPI write operation in synchronous mode.
                                            </p></html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:1430C09A-28CD-4B52-828A-2445545ADE49"/>
                                    <a:da name="DEFAULT" value="2147483647"/>
                                    <a:da name="EDITABLE" type="XPath">
                                        <a:tst expr="node:value(../FlsTimeoutSupervisionEnabled) = 'true'"/>
                                    </a:da>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=2147483647"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var><!-- FlsQspiSyncWriteTimeout -->
                              
                                <!-- FlsQspiSyncEraseTimeout -->
                                <v:var name="FlsQspiSyncEraseTimeout" type="INTEGER">
                                    <a:a name="LABEL" value="Fls Qspi Sync Erase Timeout"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[<html><p>
                                                Vendor specific: Fls Qspi Sync Erase Timeout is the timeout value for QSPI erase operation in synchronous mode.
                                            </p></html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:1430C09A-28CD-4B52-828A-2445555ADE49"/>
                                    <a:da name="DEFAULT" value="2147483647"/>
                                    <a:da name="EDITABLE" type="XPath">
                                        <a:tst expr="node:value(../FlsTimeoutSupervisionEnabled) = 'true'"/>
                                    </a:da>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=2147483647"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var><!-- FlsQspiSyncEraseTimeout -->
                            
                                <!-- FlsQspiIrqReadTimeout -->
                                <v:var name="FlsQspiIrqReadTimeout" type="INTEGER">
                                    <a:a name="LABEL" value="Fls Qspi Irq Read Timeout"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[<html><p>
                                                Vendor specific: Fls Qspi Irq Read Timeout is the timeout value for QSPI read operation in interrupt mode. 
                                                The value represents the number of Fls_MainFunctions it takes to complete the QSPI interrupt job.
                                            </p></html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:1430C09A-28CD-4B52-828A-2455555ADE49"/>
                                    <a:da name="DEFAULT" value="2147483647"/>
                                    <a:da name="EDITABLE" type="XPath">
                                        <a:tst expr="node:value(../FlsTimeoutSupervisionEnabled) = 'true'"/>
                                    </a:da>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=2147483647"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var><!-- FlsQspiIrqReadTimeout -->
                              
                                <!-- FlsQspiIrqEraseTimeout -->
                                <v:var name="FlsQspiIrqEraseTimeout" type="INTEGER">
                                    <a:a name="LABEL" value="Fls Qspi Irq Erase Timeout"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[<html><p>
                                                Vendor specific: Fls Qspi Irq Read Timeout is the timeout value for QSPI read operation in interrupt mode. 
                                                The value represents the number of Fls_MainFunctions it takes to complete the QSPI interrupt job.
                                            </p></html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:1430C09A-28CD-4B52-828A-2465555ADE49"/>
                                    <a:da name="DEFAULT" value="2147483647"/>
                                    <a:da name="EDITABLE" type="XPath">
                                        <a:tst expr="node:value(../FlsTimeoutSupervisionEnabled) = 'true'"/>
                                    </a:da>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=2147483647"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var><!-- FlsQspiIrqEraseTimeout -->
                              
                                <!-- FlsQspiIrqWriteTimeout -->
                                <v:var name="FlsQspiIrqWriteTimeout" type="INTEGER">
                                    <a:a name="LABEL" value="Fls Qspi Irq Write Timeout"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[<html><p>
                                                Vendor specific: Fls Qspi Irq Write Timeout is the timeout value for QSPI read operation in interrupt mode. 
                                                The value represents the number of Fls_MainFunctions it takes to complete the QSPI interrupt job.
                                            </p></html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:1430C09A-28CD-4B52-828A-2475555ADE49"/>
                                    <a:da name="DEFAULT" value="2147483647"/>
                                    <a:da name="EDITABLE" type="XPath">
                                        <a:tst expr="node:value(../FlsTimeoutSupervisionEnabled) = 'true'"/>
                                    </a:da>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=2147483647"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var><!-- FlsQspiIrqWriteTimeout -->
                                
                                                        
                                
                                <!-- standalone abort timeout -->
                                <v:var name="FlsAbortTimeout" type="INTEGER">
                                    <a:a name="LABEL" value="Fls Async Abort Timeout"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[<html><p>
                                                Vendor specific: Fls Abort Timeout is the timeout value for aborting an ongoing operation. 
                                                The timeout is used also in Fls_Cancel API, if enabled and if the flash hardware channel
                                                does not support an immediate abort feature.
                                            </p></html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:7303873D-5BA1-44D3-9620-9A0F72F9129D"/>
                                    <a:da name="DEFAULT" value="32767"/>
                                    <a:da name="EDITABLE" type="XPath">
                                        <a:tst expr="node:value(../FlsTimeoutSupervisionEnabled) = 'true'"/>
                                    </a:da>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=2147483647"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var> 
                                
                            
                        </v:ctr>
                        
                        <!-- @implements FlsPublishedInformation_Object --> 
                        <v:ctr name="FlsPublishedInformation" type="IDENTIFIABLE">
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:<html><p>
                                        Additional published parameters not covered by CommonPublishedInformation container.
                                        Note that these parameters do not have any configuration class setting, since they are published information.
                                    </p></html>]]>
                                </a:v>
                            </a:a>
                            <a:a name="UUID" value="ECUC:7dbdd7c4-c36b-48a7-8ea6-27957130d568"/>
                            
                            <!-- @implements FlsAcLocationErase_Object -->
                            <v:var name="FlsAcLocationErase" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="Fls Access Code Location Erase"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Position in RAM, to which the erase flash access code has to be loaded. 
                                            Only relevant if the erase flash access code is not position independent. If this information is not provided it is assumed that the erase flash access code is position independent and that therefore the RAM position can be freely configured.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:f2fda57b-3619-46b8-a9ce-267e85f10081"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=4294967295"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                            </v:var>
                            
                            <!-- @implements FlsAcLocationWrite_Object --> 
                            <v:var name="FlsAcLocationWrite" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="Fls Access Code Location Write"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Vendor specific: Position in RAM, to which the write flash access code has to be loaded. 
                                            Only relevant if the write flash access code is not position independent. If this information is not provided it is assumed that the write flash access code is position independent and that therefore the RAM position can be freely configured.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:c12a9e97-e359-402f-a617-8a492d3e5f81"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=4294967295"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                            </v:var>
                            
                            <!-- @implements FlsAcSizeErase_Object --> 
                            <v:var name="FlsAcSizeErase" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="Fls Accesse Code Size Erase"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Number of bytes in RAM needed for the erase flash access code. 
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:5a4b6039-6774-4a22-9632-e9a59e21b295"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=4294967295"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                            </v:var>
                            
                            <!-- @implements FlsAcSizeWrite_Object --> 
                            <v:var name="FlsAcSizeWrite" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="Fls Accesse Code Size Write"/>
                                <a:a name="DESC" >
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Number of bytes in RAM needed for the write flash access code. 
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:de7a689e-b836-453b-a2b9-2931c07eaf8e"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=4294967295"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                            </v:var>
                            
                            <!-- @implements FlsEraseTime_Object --> 
                            <v:var name="FlsEraseTime" type="FLOAT_LABEL">
                                <a:a name="LABEL" value="Fls Erase Time"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Maximum time to erase one complete flash sector [sec].
                                            <br>Note:<br>This value can be found on DS as the maximum erase time occurs after the specified number of program/erase cycles .
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:507fad56-d381-4b21-9216-a5b1632881e8"/>
                                <a:da name="DEFAULT" value="5.0"/>
                                <a:da name="INVALID" type="Range">
                                     <!-- Max Range should be Inf, but removing Max Range check gives Amdc check error  -->
                                     <a:tst expr="&lt;=5.0"/>
                                     <a:tst expr="&gt;=0"/>
                                </a:da>
                            </v:var>
                            
                            <!-- @implements FlsErasedValue_object --> 
                            <v:var name="FlsErasedValue" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="Fls Erased Value"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            The contents of an erased flash memory cell. 
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:e0ddb665-caad-4131-ae07-45c9d43a943a"/>
                                <a:da name="DEFAULT" value="4294967295"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=4294967295"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                            </v:var> 
                            
                            <!-- @implements FlsExpectedHwId_Object -->
                            <v:var name="FlsExpectedHwId" type="STRING_LABEL">
                                <a:a name="LABEL" value="Fls Expected Hw Id"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Unique identifier of the hardware device that is expected by this driver (the device for which this driver has been implemented).
                                            Only relevant for external flash drivers.
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:2efad025-dc04-4711-94a0-d6e05aca506d"/>
                                <a:da name="DEFAULT" value="0"/>
                            </v:var>
                            
                            <!-- @implements FlsSpecifiedEraseCycles_Object --> 
                            <v:var name="FlsSpecifiedEraseCycles" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="Fls Specified Erase Cycles"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                            Number of erase cycles specified for the flash device (usually given in the device data sheet).
                                            FLS198: If the number of specified erase cycles depends on the operating environment (temperature, voltage, ...) during reprogramming of the flash device, the minimum number for which a data retention of at least 15 years over the temperature range from -40C .. +125C can be guaranteed shall be given.
                                            <br>Note:<br>If there are different numbers of specified erase cycles for different flash sectors of the device this parameter has to be extended to a parameter list (similar to the sector list above).
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:17bc6553-7343-4e98-92c7-c6c9eaaf85f4"/>
                                <a:da name="DEFAULT" value="100000"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=4294967295"/>
                                    <a:tst expr="&gt;=0"/>
                                </a:da>
                            </v:var>
                            
                            <!-- @implements FlsWriteTime_Object --> 
                            <v:var name="FlsWriteTime" type="FLOAT_LABEL">
                                <a:a name="LABEL" value="Fls Write Time"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html><p>
                                          Maximum time to program one complete flash page [sec]. 
                                        </p></html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:79158910-10d3-42a8-bc55-6f082f686f85"/>
                                <a:da name="DEFAULT" value="0.0005"/>
                                <a:da name="INVALID" type="Range">
                                     <!-- Max Range should be Inf, but removing Max Range check gives Amdc check error  -->
                                     <a:tst expr="&lt;=0.0005"/>
                                     <a:tst expr="&gt;=0"/>
                                </a:da>
                            </v:var>
                            
                        </v:ctr>
                        
                        <!-- @implements CommonPublishedInformation_Object -->
                        <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                            <a:a name="LABEL" value="Common Published Information"/>
                            <!-- @remarks Covers BSW00374, BSW00318 -->
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html>
                                        <p>Common container, aggregated by all modules. It contains published information about vendor and versions.</p>
                                        </html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="UUID" value="ECUC:9956f1f1-bff6-45ea-a7e9-cc4070599727"/>
                            
                            <v:var name="ArReleaseMajorVersion" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="AUTOSAR Major Version"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:
                                            <html>
                                            <p>Vendor specific: Major version number of AUTOSAR specification on which the appropriate implementation is based on.</p>
                                            </html>
                                        ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:66b8f123-9bf5-4365-a866-6c1bea182a9f"/>
                                <a:da name="DEFAULT" value="4"/>                       
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=4"/>
                                    <a:tst expr="&lt;=4"/>
                                </a:da>                    
                            </v:var>
                            
                            <v:var name="ArReleaseMinorVersion" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:
                                            <html>
                                            <p>Vendor specific: Minor version number of AUTOSAR specification on which the appropriate implementation is based on.</p>
                                            </html>
                                        ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:d21a16d5-553c-4da2-893d-52edcc80e3f2"/>
                                <a:da name="DEFAULT" value="3"/>                       
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=3"/>
                                    <a:tst expr="&lt;=3"/>
                                </a:da>                    
                            </v:var>
                            
                            <v:var name="ArReleaseRevisionVersion" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:
                                            <html>
                                            <p>Vendor specific: Patch version number of AUTOSAR specification on which the appropriate implementation is based on.</p>
                                            </html>
                                        ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:b676214d-048d-4372-9e45-9220274094e9"/>
                                <a:da name="DEFAULT" value="1"/>                       
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=1"/>
                                    <a:tst expr="&lt;=1"/>
                                </a:da>  
                            </v:var>
                            
                            <v:var name="ModuleId" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="Numeric Module ID"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:
                                            <html>
                                            <p>Vendor specific: Module ID of this module.</p>
                                            </html>
                                        ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:81e50058-1c3a-464f-88c2-145a6833f201"/>
                                <a:da name="DEFAULT" value="92"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=92"/>
                                    <a:tst expr="&lt;=92"/>
                                </a:da>                          
                            </v:var>
                            
                            <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="Software Major Version"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:
                                            <html>
                                            <p>Major version number of the vendor specific implementation of the module. The numbering is vendor specific.</p>
                                            </html>
                                        ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:f7e52441-a341-495d-a311-27319dbe48ab"/>
                                <a:da name="DEFAULT" value="1"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=1"/>
                                    <a:tst expr="&lt;=1"/>
                                </a:da>                          
                            </v:var>
                            
                            <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="Software Minor Version"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:
                                            <html>
                                            <p>Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.</p>
                                            </html>
                                        ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:9023bc4f-82f2-4011-bc46-6f18805c7e78"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=0"/>
                                    <a:tst expr="&lt;=0"/>
                                </a:da>                             
                            </v:var>
                            
                            <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="Software Patch Version"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:
                                            <html>
                                            <p>Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.</p>
                                            </html>
                                        ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                               </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:16c1307a-4de3-4609-82f6-7efa00f78160"/>
                                <a:da name="DEFAULT" value="2"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=2"/>
                                    <a:tst expr="&lt;=2"/>
                                </a:da>                            
                            </v:var>
                            
                            <v:var name="VendorApiInfix" type="STRING_LABEL">
                                <a:a name="LABEL" value="Vendor Api Infix"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:
                                            <html>
                                            <p>In driver modules which can be instantiated several times on a single ECU, BSW00347 requires that the name of APIs is extended by the VendorId and a vendor specific name.
                                            This parameter is used to specify the vendor specific name. In total, the implementation specific name is generated as follows:
                                            &lt;ModuleName&gt;_&gt;VendorId&gt;_&lt;VendorApiInfix&gt;&lt;Api name from SWS&gt;.
                                            E.g.  assuming that the VendorId of the implementor is 123 and the implementer chose a VendorApiInfix of &quot;v11r456&quot; a api name Can_Write defined in the SWS will translate to Can_123_v11r456Write.
                                            This parameter is mandatory for all modules with upper multiplicity &gt; 1. It shall not be used for modules with upper multiplicity =1.
                                            </p>
                                            </html>
                                        ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                   <icc:v class="PublishedInformation">VariantPostBuild</icc:v>
                                   <icc:v class="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:c2017351-3b3d-4fb6-b504-2b92754b1fc2"/>
                                <a:da name="DEFAULT" value=""/>
                                <a:a name="OPTIONAL" value="true"/>
                                <a:da name="READONLY" value="true"/>
                            </v:var>
                            
                            <v:var name="VendorId" type="INTEGER_LABEL">
                                <a:a name="LABEL" value="Vendor ID"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:
                                            <html>
                                            <p>Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list.</p>
                                            </html>
                                        ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:6e8602ce-59d0-4f63-924d-348add0fbe7f"/>
                                <a:da name="DEFAULT" value="43"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=43"/>
                                    <a:tst expr="&lt;=43"/>
                                </a:da>                            
                            </v:var>
                            
                        </v:ctr>
                        
                        <d:ref type="REFINED_MODULE_DEF" value="ASPath:/AUTOSAR/EcucDefs/Fls"/>
                        
                    </v:ctr>
                </d:chc>
                
                <d:chc name="Fls_EcuParameterDefinition" 
                       type="AR-ELEMENT" value="ECU_PARAMETER_DEFINITION">
                    <d:ctr type="AR-ELEMENT">
                        <a:a name="DEF" 
                             value="ASPath:/AR_PACKAGE_SCHEMA/ECU_PARAMETER_DEFINITION"/>
                        <a:a name="UUID" value="ECUC:ad7b5825-bfba-4fe6-b529-1109aae46160"/>
                        <d:lst name="MODULE_REF">
                            <d:ref type="MODULE_REF" value="ASPath:/TS_T40D2M10I2R0/Fls"/>
                        </d:lst>
                    </d:ctr>
                </d:chc>
                
                <d:chc name="Fls_ModuleDescription" 
                       type="AR-ELEMENT" value="BSW_MODULE_DESCRIPTION">
                    <d:ctr type="AR-ELEMENT">
                        <a:a name="DEF" 
                             value="ASPath:/AR_PACKAGE_SCHEMA/BSW_MODULE_DESCRIPTION"/>
                        <d:var name="MODULE_ID" type="INTEGER" >
                            <a:a name="EDITABLE" value="false"/>
                            <a:a name="IMPORTER_INFO" value="@DEF"/>
                        </d:var>
                        <d:ref type="RECOMMENDED_CONFIGURATION" >
                            <a:a name="EDITABLE" value="false"/>
                            <a:a name="IMPORTER_INFO" value="@DEF"/>
                        </d:ref>
                        <d:ref type="PRE_CONFIGURED_CONF" >
                            <a:a name="EDITABLE" value="false"/>
                            <a:a name="IMPORTER_INFO" value="@DEF"/>
                        </d:ref>
                        <d:ref type="VENDOR_SPECIFIC_MODULE_DEF" 
                               value="ASPath:/TS_T40D2M10I2R0/Fls"/>
                    </d:ctr>
                </d:chc>
                
            </d:lst>
        </d:ctr>
    </d:lst>
</d:ctr>

</datamodel>
